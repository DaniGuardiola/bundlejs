{"version":3,"file":"denoflate-82001750.mjs","sources":["../src/deno/denoflate/pkg/denoflate.js"],"sourcesContent":["let wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function deflate(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.deflate(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function inflate(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.inflate(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function gzip(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.gzip(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function gunzip(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.gunzip(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function zlib(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.zlib(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function unzlib(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.unzlib(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        // input = new URL('denoflate_bg.wasm', import.meta.url);\n        input = new URL('denoflate_bg.wasm');\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;"],"names":[],"mappings":"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"}