{"version":3,"file":"esbuild-5181e8c1.mjs","sources":["../../../node_modules/.pnpm/esbuild-wasm@0.16.10/node_modules/esbuild-wasm/lib/browser.js"],"sourcesContent":["(module=>{\n\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// lib/npm/browser.ts\nvar browser_exports = {};\n__export(browser_exports, {\n  analyzeMetafile: () => analyzeMetafile,\n  analyzeMetafileSync: () => analyzeMetafileSync,\n  build: () => build,\n  buildSync: () => buildSync,\n  default: () => browser_default,\n  formatMessages: () => formatMessages,\n  formatMessagesSync: () => formatMessagesSync,\n  initialize: () => initialize,\n  serve: () => serve,\n  transform: () => transform,\n  transformSync: () => transformSync,\n  version: () => version\n});\nmodule.exports = __toCommonJS(browser_exports);\n\n// lib/shared/stdio_protocol.ts\nfunction encodePacket(packet) {\n  let visit = (value) => {\n    if (value === null) {\n      bb.write8(0);\n    } else if (typeof value === \"boolean\") {\n      bb.write8(1);\n      bb.write8(+value);\n    } else if (typeof value === \"number\") {\n      bb.write8(2);\n      bb.write32(value | 0);\n    } else if (typeof value === \"string\") {\n      bb.write8(3);\n      bb.write(encodeUTF8(value));\n    } else if (value instanceof Uint8Array) {\n      bb.write8(4);\n      bb.write(value);\n    } else if (value instanceof Array) {\n      bb.write8(5);\n      bb.write32(value.length);\n      for (let item of value) {\n        visit(item);\n      }\n    } else {\n      let keys = Object.keys(value);\n      bb.write8(6);\n      bb.write32(keys.length);\n      for (let key of keys) {\n        bb.write(encodeUTF8(key));\n        visit(value[key]);\n      }\n    }\n  };\n  let bb = new ByteBuffer();\n  bb.write32(0);\n  bb.write32(packet.id << 1 | +!packet.isRequest);\n  visit(packet.value);\n  writeUInt32LE(bb.buf, bb.len - 4, 0);\n  return bb.buf.subarray(0, bb.len);\n}\nfunction decodePacket(bytes) {\n  let visit = () => {\n    switch (bb.read8()) {\n      case 0:\n        return null;\n      case 1:\n        return !!bb.read8();\n      case 2:\n        return bb.read32();\n      case 3:\n        return decodeUTF8(bb.read());\n      case 4:\n        return bb.read();\n      case 5: {\n        let count = bb.read32();\n        let value2 = [];\n        for (let i = 0; i < count; i++) {\n          value2.push(visit());\n        }\n        return value2;\n      }\n      case 6: {\n        let count = bb.read32();\n        let value2 = {};\n        for (let i = 0; i < count; i++) {\n          value2[decodeUTF8(bb.read())] = visit();\n        }\n        return value2;\n      }\n      default:\n        throw new Error(\"Invalid packet\");\n    }\n  };\n  let bb = new ByteBuffer(bytes);\n  let id = bb.read32();\n  let isRequest = (id & 1) === 0;\n  id >>>= 1;\n  let value = visit();\n  if (bb.ptr !== bytes.length) {\n    throw new Error(\"Invalid packet\");\n  }\n  return { id, isRequest, value };\n}\nvar ByteBuffer = class {\n  constructor(buf = new Uint8Array(1024)) {\n    this.buf = buf;\n    this.len = 0;\n    this.ptr = 0;\n  }\n  _write(delta) {\n    if (this.len + delta > this.buf.length) {\n      let clone = new Uint8Array((this.len + delta) * 2);\n      clone.set(this.buf);\n      this.buf = clone;\n    }\n    this.len += delta;\n    return this.len - delta;\n  }\n  write8(value) {\n    let offset = this._write(1);\n    this.buf[offset] = value;\n  }\n  write32(value) {\n    let offset = this._write(4);\n    writeUInt32LE(this.buf, value, offset);\n  }\n  write(bytes) {\n    let offset = this._write(4 + bytes.length);\n    writeUInt32LE(this.buf, bytes.length, offset);\n    this.buf.set(bytes, offset + 4);\n  }\n  _read(delta) {\n    if (this.ptr + delta > this.buf.length) {\n      throw new Error(\"Invalid packet\");\n    }\n    this.ptr += delta;\n    return this.ptr - delta;\n  }\n  read8() {\n    return this.buf[this._read(1)];\n  }\n  read32() {\n    return readUInt32LE(this.buf, this._read(4));\n  }\n  read() {\n    let length = this.read32();\n    let bytes = new Uint8Array(length);\n    let ptr = this._read(bytes.length);\n    bytes.set(this.buf.subarray(ptr, ptr + length));\n    return bytes;\n  }\n};\nvar encodeUTF8;\nvar decodeUTF8;\nvar encodeInvariant;\nif (typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\") {\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  encodeUTF8 = (text) => encoder.encode(text);\n  decodeUTF8 = (bytes) => decoder.decode(bytes);\n  encodeInvariant = 'new TextEncoder().encode(\"\")';\n} else if (typeof Buffer !== \"undefined\") {\n  encodeUTF8 = (text) => Buffer.from(text);\n  decodeUTF8 = (bytes) => {\n    let { buffer, byteOffset, byteLength } = bytes;\n    return Buffer.from(buffer, byteOffset, byteLength).toString();\n  };\n  encodeInvariant = 'Buffer.from(\"\")';\n} else {\n  throw new Error(\"No UTF-8 codec found\");\n}\nif (!(encodeUTF8(\"\") instanceof Uint8Array))\n  throw new Error(`Invariant violation: \"${encodeInvariant} instanceof Uint8Array\" is incorrectly false\n\nThis indicates that your JavaScript environment is broken. You cannot use\nesbuild in this environment because esbuild relies on this invariant. This\nis not a problem with esbuild. You need to fix your environment instead.\n`);\nfunction readUInt32LE(buffer, offset) {\n  return buffer[offset++] | buffer[offset++] << 8 | buffer[offset++] << 16 | buffer[offset++] << 24;\n}\nfunction writeUInt32LE(buffer, value, offset) {\n  buffer[offset++] = value;\n  buffer[offset++] = value >> 8;\n  buffer[offset++] = value >> 16;\n  buffer[offset++] = value >> 24;\n}\n\n// lib/shared/common.ts\nvar quote = JSON.stringify;\nvar buildLogLevelDefault = \"warning\";\nvar transformLogLevelDefault = \"silent\";\nfunction validateTarget(target) {\n  validateStringValue(target, \"target\");\n  if (target.indexOf(\",\") >= 0)\n    throw new Error(`Invalid target: ${target}`);\n  return target;\n}\nvar canBeAnything = () => null;\nvar mustBeBoolean = (value) => typeof value === \"boolean\" ? null : \"a boolean\";\nvar mustBeBooleanOrObject = (value) => typeof value === \"boolean\" || typeof value === \"object\" && !Array.isArray(value) ? null : \"a boolean or an object\";\nvar mustBeString = (value) => typeof value === \"string\" ? null : \"a string\";\nvar mustBeRegExp = (value) => value instanceof RegExp ? null : \"a RegExp object\";\nvar mustBeInteger = (value) => typeof value === \"number\" && value === (value | 0) ? null : \"an integer\";\nvar mustBeFunction = (value) => typeof value === \"function\" ? null : \"a function\";\nvar mustBeArray = (value) => Array.isArray(value) ? null : \"an array\";\nvar mustBeObject = (value) => typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"an object\";\nvar mustBeWebAssemblyModule = (value) => value instanceof WebAssembly.Module ? null : \"a WebAssembly.Module\";\nvar mustBeArrayOrRecord = (value) => typeof value === \"object\" && value !== null ? null : \"an array or an object\";\nvar mustBeObjectOrNull = (value) => typeof value === \"object\" && !Array.isArray(value) ? null : \"an object or null\";\nvar mustBeStringOrBoolean = (value) => typeof value === \"string\" || typeof value === \"boolean\" ? null : \"a string or a boolean\";\nvar mustBeStringOrObject = (value) => typeof value === \"string\" || typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"a string or an object\";\nvar mustBeStringOrArray = (value) => typeof value === \"string\" || Array.isArray(value) ? null : \"a string or an array\";\nvar mustBeStringOrUint8Array = (value) => typeof value === \"string\" || value instanceof Uint8Array ? null : \"a string or a Uint8Array\";\nvar mustBeStringOrURL = (value) => typeof value === \"string\" || value instanceof URL ? null : \"a string or a URL\";\nfunction getFlag(object, keys, key, mustBeFn) {\n  let value = object[key];\n  keys[key + \"\"] = true;\n  if (value === void 0)\n    return void 0;\n  let mustBe = mustBeFn(value);\n  if (mustBe !== null)\n    throw new Error(`${quote(key)} must be ${mustBe}`);\n  return value;\n}\nfunction checkForInvalidFlags(object, keys, where) {\n  for (let key in object) {\n    if (!(key in keys)) {\n      throw new Error(`Invalid option ${where}: ${quote(key)}`);\n    }\n  }\n}\nfunction validateInitializeOptions(options) {\n  let keys = /* @__PURE__ */ Object.create(null);\n  let wasmURL = getFlag(options, keys, \"wasmURL\", mustBeStringOrURL);\n  let wasmModule = getFlag(options, keys, \"wasmModule\", mustBeWebAssemblyModule);\n  let worker = getFlag(options, keys, \"worker\", mustBeBoolean);\n  checkForInvalidFlags(options, keys, \"in initialize() call\");\n  return {\n    wasmURL,\n    wasmModule,\n    worker\n  };\n}\nfunction validateMangleCache(mangleCache) {\n  let validated;\n  if (mangleCache !== void 0) {\n    validated = /* @__PURE__ */ Object.create(null);\n    for (let key in mangleCache) {\n      let value = mangleCache[key];\n      if (typeof value === \"string\" || value === false) {\n        validated[key] = value;\n      } else {\n        throw new Error(`Expected ${quote(key)} in mangle cache to map to either a string or false`);\n      }\n    }\n  }\n  return validated;\n}\nfunction pushLogFlags(flags, options, keys, isTTY, logLevelDefault) {\n  let color = getFlag(options, keys, \"color\", mustBeBoolean);\n  let logLevel = getFlag(options, keys, \"logLevel\", mustBeString);\n  let logLimit = getFlag(options, keys, \"logLimit\", mustBeInteger);\n  if (color !== void 0)\n    flags.push(`--color=${color}`);\n  else if (isTTY)\n    flags.push(`--color=true`);\n  flags.push(`--log-level=${logLevel || logLevelDefault}`);\n  flags.push(`--log-limit=${logLimit || 0}`);\n}\nfunction validateStringValue(value, what, key) {\n  if (typeof value !== \"string\") {\n    throw new Error(`Expected value for ${what}${key !== void 0 ? \" \" + quote(key) : \"\"} to be a string, got ${typeof value} instead`);\n  }\n  return value;\n}\nfunction pushCommonFlags(flags, options, keys) {\n  let legalComments = getFlag(options, keys, \"legalComments\", mustBeString);\n  let sourceRoot = getFlag(options, keys, \"sourceRoot\", mustBeString);\n  let sourcesContent = getFlag(options, keys, \"sourcesContent\", mustBeBoolean);\n  let target = getFlag(options, keys, \"target\", mustBeStringOrArray);\n  let format = getFlag(options, keys, \"format\", mustBeString);\n  let globalName = getFlag(options, keys, \"globalName\", mustBeString);\n  let mangleProps = getFlag(options, keys, \"mangleProps\", mustBeRegExp);\n  let reserveProps = getFlag(options, keys, \"reserveProps\", mustBeRegExp);\n  let mangleQuoted = getFlag(options, keys, \"mangleQuoted\", mustBeBoolean);\n  let minify = getFlag(options, keys, \"minify\", mustBeBoolean);\n  let minifySyntax = getFlag(options, keys, \"minifySyntax\", mustBeBoolean);\n  let minifyWhitespace = getFlag(options, keys, \"minifyWhitespace\", mustBeBoolean);\n  let minifyIdentifiers = getFlag(options, keys, \"minifyIdentifiers\", mustBeBoolean);\n  let drop = getFlag(options, keys, \"drop\", mustBeArray);\n  let charset = getFlag(options, keys, \"charset\", mustBeString);\n  let treeShaking = getFlag(options, keys, \"treeShaking\", mustBeBoolean);\n  let ignoreAnnotations = getFlag(options, keys, \"ignoreAnnotations\", mustBeBoolean);\n  let jsx = getFlag(options, keys, \"jsx\", mustBeString);\n  let jsxFactory = getFlag(options, keys, \"jsxFactory\", mustBeString);\n  let jsxFragment = getFlag(options, keys, \"jsxFragment\", mustBeString);\n  let jsxImportSource = getFlag(options, keys, \"jsxImportSource\", mustBeString);\n  let jsxDev = getFlag(options, keys, \"jsxDev\", mustBeBoolean);\n  let jsxSideEffects = getFlag(options, keys, \"jsxSideEffects\", mustBeBoolean);\n  let define = getFlag(options, keys, \"define\", mustBeObject);\n  let logOverride = getFlag(options, keys, \"logOverride\", mustBeObject);\n  let supported = getFlag(options, keys, \"supported\", mustBeObject);\n  let pure = getFlag(options, keys, \"pure\", mustBeArray);\n  let keepNames = getFlag(options, keys, \"keepNames\", mustBeBoolean);\n  let platform = getFlag(options, keys, \"platform\", mustBeString);\n  if (legalComments)\n    flags.push(`--legal-comments=${legalComments}`);\n  if (sourceRoot !== void 0)\n    flags.push(`--source-root=${sourceRoot}`);\n  if (sourcesContent !== void 0)\n    flags.push(`--sources-content=${sourcesContent}`);\n  if (target) {\n    if (Array.isArray(target))\n      flags.push(`--target=${Array.from(target).map(validateTarget).join(\",\")}`);\n    else\n      flags.push(`--target=${validateTarget(target)}`);\n  }\n  if (format)\n    flags.push(`--format=${format}`);\n  if (globalName)\n    flags.push(`--global-name=${globalName}`);\n  if (platform)\n    flags.push(`--platform=${platform}`);\n  if (minify)\n    flags.push(\"--minify\");\n  if (minifySyntax)\n    flags.push(\"--minify-syntax\");\n  if (minifyWhitespace)\n    flags.push(\"--minify-whitespace\");\n  if (minifyIdentifiers)\n    flags.push(\"--minify-identifiers\");\n  if (charset)\n    flags.push(`--charset=${charset}`);\n  if (treeShaking !== void 0)\n    flags.push(`--tree-shaking=${treeShaking}`);\n  if (ignoreAnnotations)\n    flags.push(`--ignore-annotations`);\n  if (drop)\n    for (let what of drop)\n      flags.push(`--drop:${validateStringValue(what, \"drop\")}`);\n  if (mangleProps)\n    flags.push(`--mangle-props=${mangleProps.source}`);\n  if (reserveProps)\n    flags.push(`--reserve-props=${reserveProps.source}`);\n  if (mangleQuoted !== void 0)\n    flags.push(`--mangle-quoted=${mangleQuoted}`);\n  if (jsx)\n    flags.push(`--jsx=${jsx}`);\n  if (jsxFactory)\n    flags.push(`--jsx-factory=${jsxFactory}`);\n  if (jsxFragment)\n    flags.push(`--jsx-fragment=${jsxFragment}`);\n  if (jsxImportSource)\n    flags.push(`--jsx-import-source=${jsxImportSource}`);\n  if (jsxDev)\n    flags.push(`--jsx-dev`);\n  if (jsxSideEffects)\n    flags.push(`--jsx-side-effects`);\n  if (define) {\n    for (let key in define) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid define: ${key}`);\n      flags.push(`--define:${key}=${validateStringValue(define[key], \"define\", key)}`);\n    }\n  }\n  if (logOverride) {\n    for (let key in logOverride) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid log override: ${key}`);\n      flags.push(`--log-override:${key}=${validateStringValue(logOverride[key], \"log override\", key)}`);\n    }\n  }\n  if (supported) {\n    for (let key in supported) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid supported: ${key}`);\n      const value = supported[key];\n      if (typeof value !== \"boolean\")\n        throw new Error(`Expected value for supported ${quote(key)} to be a boolean, got ${typeof value} instead`);\n      flags.push(`--supported:${key}=${value}`);\n    }\n  }\n  if (pure)\n    for (let fn of pure)\n      flags.push(`--pure:${validateStringValue(fn, \"pure\")}`);\n  if (keepNames)\n    flags.push(`--keep-names`);\n}\nfunction flagsForBuildOptions(callName, options, isTTY, logLevelDefault, writeDefault) {\n  var _a;\n  let flags = [];\n  let entries = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  let stdinContents = null;\n  let stdinResolveDir = null;\n  let watchMode = null;\n  pushLogFlags(flags, options, keys, isTTY, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let bundle = getFlag(options, keys, \"bundle\", mustBeBoolean);\n  let watch = getFlag(options, keys, \"watch\", mustBeBooleanOrObject);\n  let splitting = getFlag(options, keys, \"splitting\", mustBeBoolean);\n  let preserveSymlinks = getFlag(options, keys, \"preserveSymlinks\", mustBeBoolean);\n  let metafile = getFlag(options, keys, \"metafile\", mustBeBoolean);\n  let outfile = getFlag(options, keys, \"outfile\", mustBeString);\n  let outdir = getFlag(options, keys, \"outdir\", mustBeString);\n  let outbase = getFlag(options, keys, \"outbase\", mustBeString);\n  let tsconfig = getFlag(options, keys, \"tsconfig\", mustBeString);\n  let resolveExtensions = getFlag(options, keys, \"resolveExtensions\", mustBeArray);\n  let nodePathsInput = getFlag(options, keys, \"nodePaths\", mustBeArray);\n  let mainFields = getFlag(options, keys, \"mainFields\", mustBeArray);\n  let conditions = getFlag(options, keys, \"conditions\", mustBeArray);\n  let external = getFlag(options, keys, \"external\", mustBeArray);\n  let packages = getFlag(options, keys, \"packages\", mustBeString);\n  let alias = getFlag(options, keys, \"alias\", mustBeObject);\n  let loader = getFlag(options, keys, \"loader\", mustBeObject);\n  let outExtension = getFlag(options, keys, \"outExtension\", mustBeObject);\n  let publicPath = getFlag(options, keys, \"publicPath\", mustBeString);\n  let entryNames = getFlag(options, keys, \"entryNames\", mustBeString);\n  let chunkNames = getFlag(options, keys, \"chunkNames\", mustBeString);\n  let assetNames = getFlag(options, keys, \"assetNames\", mustBeString);\n  let inject = getFlag(options, keys, \"inject\", mustBeArray);\n  let banner = getFlag(options, keys, \"banner\", mustBeObject);\n  let footer = getFlag(options, keys, \"footer\", mustBeObject);\n  let entryPoints = getFlag(options, keys, \"entryPoints\", mustBeArrayOrRecord);\n  let absWorkingDir = getFlag(options, keys, \"absWorkingDir\", mustBeString);\n  let stdin = getFlag(options, keys, \"stdin\", mustBeObject);\n  let write = (_a = getFlag(options, keys, \"write\", mustBeBoolean)) != null ? _a : writeDefault;\n  let allowOverwrite = getFlag(options, keys, \"allowOverwrite\", mustBeBoolean);\n  let incremental = getFlag(options, keys, \"incremental\", mustBeBoolean) === true;\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  keys.plugins = true;\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap)\n    flags.push(`--sourcemap${sourcemap === true ? \"\" : `=${sourcemap}`}`);\n  if (bundle)\n    flags.push(\"--bundle\");\n  if (allowOverwrite)\n    flags.push(\"--allow-overwrite\");\n  if (watch) {\n    flags.push(\"--watch\");\n    if (typeof watch === \"boolean\") {\n      watchMode = {};\n    } else {\n      let watchKeys = /* @__PURE__ */ Object.create(null);\n      let onRebuild = getFlag(watch, watchKeys, \"onRebuild\", mustBeFunction);\n      checkForInvalidFlags(watch, watchKeys, `on \"watch\" in ${callName}() call`);\n      watchMode = { onRebuild };\n    }\n  }\n  if (splitting)\n    flags.push(\"--splitting\");\n  if (preserveSymlinks)\n    flags.push(\"--preserve-symlinks\");\n  if (metafile)\n    flags.push(`--metafile`);\n  if (outfile)\n    flags.push(`--outfile=${outfile}`);\n  if (outdir)\n    flags.push(`--outdir=${outdir}`);\n  if (outbase)\n    flags.push(`--outbase=${outbase}`);\n  if (tsconfig)\n    flags.push(`--tsconfig=${tsconfig}`);\n  if (packages)\n    flags.push(`--packages=${packages}`);\n  if (resolveExtensions) {\n    let values = [];\n    for (let value of resolveExtensions) {\n      validateStringValue(value, \"resolve extension\");\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid resolve extension: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--resolve-extensions=${values.join(\",\")}`);\n  }\n  if (publicPath)\n    flags.push(`--public-path=${publicPath}`);\n  if (entryNames)\n    flags.push(`--entry-names=${entryNames}`);\n  if (chunkNames)\n    flags.push(`--chunk-names=${chunkNames}`);\n  if (assetNames)\n    flags.push(`--asset-names=${assetNames}`);\n  if (mainFields) {\n    let values = [];\n    for (let value of mainFields) {\n      validateStringValue(value, \"main field\");\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid main field: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--main-fields=${values.join(\",\")}`);\n  }\n  if (conditions) {\n    let values = [];\n    for (let value of conditions) {\n      validateStringValue(value, \"condition\");\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid condition: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--conditions=${values.join(\",\")}`);\n  }\n  if (external)\n    for (let name of external)\n      flags.push(`--external:${validateStringValue(name, \"external\")}`);\n  if (alias) {\n    for (let old in alias) {\n      if (old.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid package name in alias: ${old}`);\n      flags.push(`--alias:${old}=${validateStringValue(alias[old], \"alias\", old)}`);\n    }\n  }\n  if (banner) {\n    for (let type in banner) {\n      if (type.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid banner file type: ${type}`);\n      flags.push(`--banner:${type}=${validateStringValue(banner[type], \"banner\", type)}`);\n    }\n  }\n  if (footer) {\n    for (let type in footer) {\n      if (type.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid footer file type: ${type}`);\n      flags.push(`--footer:${type}=${validateStringValue(footer[type], \"footer\", type)}`);\n    }\n  }\n  if (inject)\n    for (let path of inject)\n      flags.push(`--inject:${validateStringValue(path, \"inject\")}`);\n  if (loader) {\n    for (let ext in loader) {\n      if (ext.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid loader extension: ${ext}`);\n      flags.push(`--loader:${ext}=${validateStringValue(loader[ext], \"loader\", ext)}`);\n    }\n  }\n  if (outExtension) {\n    for (let ext in outExtension) {\n      if (ext.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid out extension: ${ext}`);\n      flags.push(`--out-extension:${ext}=${validateStringValue(outExtension[ext], \"out extension\", ext)}`);\n    }\n  }\n  if (entryPoints) {\n    if (Array.isArray(entryPoints)) {\n      for (let entryPoint of entryPoints) {\n        entries.push([\"\", validateStringValue(entryPoint, \"entry point\")]);\n      }\n    } else {\n      for (let key in entryPoints) {\n        entries.push([key, validateStringValue(entryPoints[key], \"entry point\", key)]);\n      }\n    }\n  }\n  if (stdin) {\n    let stdinKeys = /* @__PURE__ */ Object.create(null);\n    let contents = getFlag(stdin, stdinKeys, \"contents\", mustBeStringOrUint8Array);\n    let resolveDir = getFlag(stdin, stdinKeys, \"resolveDir\", mustBeString);\n    let sourcefile = getFlag(stdin, stdinKeys, \"sourcefile\", mustBeString);\n    let loader2 = getFlag(stdin, stdinKeys, \"loader\", mustBeString);\n    checkForInvalidFlags(stdin, stdinKeys, 'in \"stdin\" object');\n    if (sourcefile)\n      flags.push(`--sourcefile=${sourcefile}`);\n    if (loader2)\n      flags.push(`--loader=${loader2}`);\n    if (resolveDir)\n      stdinResolveDir = resolveDir;\n    if (typeof contents === \"string\")\n      stdinContents = encodeUTF8(contents);\n    else if (contents instanceof Uint8Array)\n      stdinContents = contents;\n  }\n  let nodePaths = [];\n  if (nodePathsInput) {\n    for (let value of nodePathsInput) {\n      value += \"\";\n      nodePaths.push(value);\n    }\n  }\n  return {\n    entries,\n    flags,\n    write,\n    stdinContents,\n    stdinResolveDir,\n    absWorkingDir,\n    incremental,\n    nodePaths,\n    watch: watchMode,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction flagsForTransformOptions(callName, options, isTTY, logLevelDefault) {\n  let flags = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  pushLogFlags(flags, options, keys, isTTY, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let tsconfigRaw = getFlag(options, keys, \"tsconfigRaw\", mustBeStringOrObject);\n  let sourcefile = getFlag(options, keys, \"sourcefile\", mustBeString);\n  let loader = getFlag(options, keys, \"loader\", mustBeString);\n  let banner = getFlag(options, keys, \"banner\", mustBeString);\n  let footer = getFlag(options, keys, \"footer\", mustBeString);\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap)\n    flags.push(`--sourcemap=${sourcemap === true ? \"external\" : sourcemap}`);\n  if (tsconfigRaw)\n    flags.push(`--tsconfig-raw=${typeof tsconfigRaw === \"string\" ? tsconfigRaw : JSON.stringify(tsconfigRaw)}`);\n  if (sourcefile)\n    flags.push(`--sourcefile=${sourcefile}`);\n  if (loader)\n    flags.push(`--loader=${loader}`);\n  if (banner)\n    flags.push(`--banner=${banner}`);\n  if (footer)\n    flags.push(`--footer=${footer}`);\n  return {\n    flags,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction createChannel(streamIn) {\n  const requestCallbacksByKey = {};\n  const closeData = { didClose: false, reason: \"\" };\n  let responseCallbacks = {};\n  let nextRequestID = 0;\n  let nextBuildKey = 0;\n  let stdout = new Uint8Array(16 * 1024);\n  let stdoutUsed = 0;\n  let readFromStdout = (chunk) => {\n    let limit = stdoutUsed + chunk.length;\n    if (limit > stdout.length) {\n      let swap = new Uint8Array(limit * 2);\n      swap.set(stdout);\n      stdout = swap;\n    }\n    stdout.set(chunk, stdoutUsed);\n    stdoutUsed += chunk.length;\n    let offset = 0;\n    while (offset + 4 <= stdoutUsed) {\n      let length = readUInt32LE(stdout, offset);\n      if (offset + 4 + length > stdoutUsed) {\n        break;\n      }\n      offset += 4;\n      handleIncomingPacket(stdout.subarray(offset, offset + length));\n      offset += length;\n    }\n    if (offset > 0) {\n      stdout.copyWithin(0, offset, stdoutUsed);\n      stdoutUsed -= offset;\n    }\n  };\n  let afterClose = (error) => {\n    closeData.didClose = true;\n    if (error)\n      closeData.reason = \": \" + (error.message || error);\n    const text = \"The service was stopped\" + closeData.reason;\n    for (let id in responseCallbacks) {\n      responseCallbacks[id](text, null);\n    }\n    responseCallbacks = {};\n  };\n  let sendRequest = (refs, value, callback) => {\n    if (closeData.didClose)\n      return callback(\"The service is no longer running\" + closeData.reason, null);\n    let id = nextRequestID++;\n    responseCallbacks[id] = (error, response) => {\n      try {\n        callback(error, response);\n      } finally {\n        if (refs)\n          refs.unref();\n      }\n    };\n    if (refs)\n      refs.ref();\n    streamIn.writeToStdin(encodePacket({ id, isRequest: true, value }));\n  };\n  let sendResponse = (id, value) => {\n    if (closeData.didClose)\n      throw new Error(\"The service is no longer running\" + closeData.reason);\n    streamIn.writeToStdin(encodePacket({ id, isRequest: false, value }));\n  };\n  let handleRequest = (id, request) => __async(this, null, function* () {\n    try {\n      if (request.command === \"ping\") {\n        sendResponse(id, {});\n        return;\n      }\n      if (typeof request.key === \"number\") {\n        const requestCallbacks = requestCallbacksByKey[request.key];\n        if (requestCallbacks) {\n          const callback = requestCallbacks[request.command];\n          if (callback) {\n            yield callback(id, request);\n            return;\n          }\n        }\n      }\n      throw new Error(`Invalid command: ` + request.command);\n    } catch (e) {\n      sendResponse(id, { errors: [extractErrorMessageV8(e, streamIn, null, void 0, \"\")] });\n    }\n  });\n  let isFirstPacket = true;\n  let handleIncomingPacket = (bytes) => {\n    if (isFirstPacket) {\n      isFirstPacket = false;\n      let binaryVersion = String.fromCharCode(...bytes);\n      if (binaryVersion !== \"0.16.10\") {\n        throw new Error(`Cannot start service: Host version \"${\"0.16.10\"}\" does not match binary version ${quote(binaryVersion)}`);\n      }\n      return;\n    }\n    let packet = decodePacket(bytes);\n    if (packet.isRequest) {\n      handleRequest(packet.id, packet.value);\n    } else {\n      let callback = responseCallbacks[packet.id];\n      delete responseCallbacks[packet.id];\n      if (packet.value.error)\n        callback(packet.value.error, {});\n      else\n        callback(null, packet.value);\n    }\n  };\n  let buildOrServe = ({ callName, refs, serveOptions, options, isTTY, defaultWD, callback }) => {\n    let refCount = 0;\n    const buildKey = nextBuildKey++;\n    const requestCallbacks = {};\n    const buildRefs = {\n      ref() {\n        if (++refCount === 1) {\n          if (refs)\n            refs.ref();\n        }\n      },\n      unref() {\n        if (--refCount === 0) {\n          delete requestCallbacksByKey[buildKey];\n          if (refs)\n            refs.unref();\n        }\n      }\n    };\n    requestCallbacksByKey[buildKey] = requestCallbacks;\n    buildRefs.ref();\n    buildOrServeImpl(\n      callName,\n      buildKey,\n      sendRequest,\n      sendResponse,\n      buildRefs,\n      streamIn,\n      requestCallbacks,\n      options,\n      serveOptions,\n      isTTY,\n      defaultWD,\n      closeData,\n      (err, res) => {\n        try {\n          callback(err, res);\n        } finally {\n          buildRefs.unref();\n        }\n      }\n    );\n  };\n  let transform2 = ({ callName, refs, input, options, isTTY, fs, callback }) => {\n    const details = createObjectStash();\n    let start = (inputPath) => {\n      try {\n        if (typeof input !== \"string\" && !(input instanceof Uint8Array))\n          throw new Error('The input to \"transform\" must be a string or a Uint8Array');\n        let {\n          flags,\n          mangleCache\n        } = flagsForTransformOptions(callName, options, isTTY, transformLogLevelDefault);\n        let request = {\n          command: \"transform\",\n          flags,\n          inputFS: inputPath !== null,\n          input: inputPath !== null ? encodeUTF8(inputPath) : typeof input === \"string\" ? encodeUTF8(input) : input\n        };\n        if (mangleCache)\n          request.mangleCache = mangleCache;\n        sendRequest(refs, request, (error, response) => {\n          if (error)\n            return callback(new Error(error), null);\n          let errors = replaceDetailsInMessages(response.errors, details);\n          let warnings = replaceDetailsInMessages(response.warnings, details);\n          let outstanding = 1;\n          let next = () => {\n            if (--outstanding === 0) {\n              let result = { warnings, code: response.code, map: response.map };\n              if (\"legalComments\" in response)\n                result.legalComments = response == null ? void 0 : response.legalComments;\n              if (response.mangleCache)\n                result.mangleCache = response == null ? void 0 : response.mangleCache;\n              callback(null, result);\n            }\n          };\n          if (errors.length > 0)\n            return callback(failureErrorWithLog(\"Transform failed\", errors, warnings), null);\n          if (response.codeFS) {\n            outstanding++;\n            fs.readFile(response.code, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.code = contents;\n                next();\n              }\n            });\n          }\n          if (response.mapFS) {\n            outstanding++;\n            fs.readFile(response.map, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.map = contents;\n                next();\n              }\n            });\n          }\n          next();\n        });\n      } catch (e) {\n        let flags = [];\n        try {\n          pushLogFlags(flags, options, {}, isTTY, transformLogLevelDefault);\n        } catch (e2) {\n        }\n        const error = extractErrorMessageV8(e, streamIn, details, void 0, \"\");\n        sendRequest(refs, { command: \"error\", flags, error }, () => {\n          error.detail = details.load(error.detail);\n          callback(failureErrorWithLog(\"Transform failed\", [error], []), null);\n        });\n      }\n    };\n    if ((typeof input === \"string\" || input instanceof Uint8Array) && input.length > 1024 * 1024) {\n      let next = start;\n      start = () => fs.writeFile(input, next);\n    }\n    start(null);\n  };\n  let formatMessages2 = ({ callName, refs, messages, options, callback }) => {\n    let result = sanitizeMessages(messages, \"messages\", null, \"\");\n    if (!options)\n      throw new Error(`Missing second argument in ${callName}() call`);\n    let keys = {};\n    let kind = getFlag(options, keys, \"kind\", mustBeString);\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let terminalWidth = getFlag(options, keys, \"terminalWidth\", mustBeInteger);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    if (kind === void 0)\n      throw new Error(`Missing \"kind\" in ${callName}() call`);\n    if (kind !== \"error\" && kind !== \"warning\")\n      throw new Error(`Expected \"kind\" to be \"error\" or \"warning\" in ${callName}() call`);\n    let request = {\n      command: \"format-msgs\",\n      messages: result,\n      isWarning: kind === \"warning\"\n    };\n    if (color !== void 0)\n      request.color = color;\n    if (terminalWidth !== void 0)\n      request.terminalWidth = terminalWidth;\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      callback(null, response.messages);\n    });\n  };\n  let analyzeMetafile2 = ({ callName, refs, metafile, options, callback }) => {\n    if (options === void 0)\n      options = {};\n    let keys = {};\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let verbose = getFlag(options, keys, \"verbose\", mustBeBoolean);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    let request = {\n      command: \"analyze-metafile\",\n      metafile\n    };\n    if (color !== void 0)\n      request.color = color;\n    if (verbose !== void 0)\n      request.verbose = verbose;\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      callback(null, response.result);\n    });\n  };\n  return {\n    readFromStdout,\n    afterClose,\n    service: {\n      buildOrServe,\n      transform: transform2,\n      formatMessages: formatMessages2,\n      analyzeMetafile: analyzeMetafile2\n    }\n  };\n}\nfunction buildOrServeImpl(callName, buildKey, sendRequest, sendResponse, refs, streamIn, requestCallbacks, options, serveOptions, isTTY, defaultWD, closeData, callback) {\n  const details = createObjectStash();\n  const logPluginError = (e, pluginName, note, done) => {\n    const flags = [];\n    try {\n      pushLogFlags(flags, options, {}, isTTY, buildLogLevelDefault);\n    } catch (e2) {\n    }\n    const message = extractErrorMessageV8(e, streamIn, details, note, pluginName);\n    sendRequest(refs, { command: \"error\", flags, error: message }, () => {\n      message.detail = details.load(message.detail);\n      done(message);\n    });\n  };\n  const handleError = (e, pluginName) => {\n    logPluginError(e, pluginName, void 0, (error) => {\n      callback(failureErrorWithLog(\"Build failed\", [error], []), null);\n    });\n  };\n  let plugins;\n  if (typeof options === \"object\") {\n    const value = options.plugins;\n    if (value !== void 0) {\n      if (!Array.isArray(value))\n        throw new Error(`\"plugins\" must be an array`);\n      plugins = value;\n    }\n  }\n  if (plugins && plugins.length > 0) {\n    if (streamIn.isSync) {\n      handleError(new Error(\"Cannot use plugins in synchronous API calls\"), \"\");\n      return;\n    }\n    handlePlugins(\n      buildKey,\n      sendRequest,\n      sendResponse,\n      refs,\n      streamIn,\n      requestCallbacks,\n      options,\n      plugins,\n      details\n    ).then(\n      (result) => {\n        if (!result.ok) {\n          handleError(result.error, result.pluginName);\n          return;\n        }\n        try {\n          buildOrServeContinue(result.requestPlugins, result.runOnEndCallbacks);\n        } catch (e) {\n          handleError(e, \"\");\n        }\n      },\n      (e) => handleError(e, \"\")\n    );\n    return;\n  }\n  try {\n    buildOrServeContinue(null, (result, logPluginError2, done) => done());\n  } catch (e) {\n    handleError(e, \"\");\n  }\n  function buildOrServeContinue(requestPlugins, runOnEndCallbacks) {\n    let writeDefault = !streamIn.isWriteUnavailable;\n    let {\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir,\n      incremental,\n      nodePaths,\n      watch,\n      mangleCache\n    } = flagsForBuildOptions(callName, options, isTTY, buildLogLevelDefault, writeDefault);\n    let request = {\n      command: \"build\",\n      key: buildKey,\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir: absWorkingDir || defaultWD,\n      incremental,\n      nodePaths\n    };\n    if (requestPlugins)\n      request.plugins = requestPlugins;\n    if (mangleCache)\n      request.mangleCache = mangleCache;\n    let serve2 = serveOptions && buildServeData(buildKey, sendRequest, sendResponse, refs, requestCallbacks, serveOptions, request);\n    let rebuild;\n    let stop;\n    let copyResponseToResult = (response, result) => {\n      if (response.outputFiles)\n        result.outputFiles = response.outputFiles.map(convertOutputFiles);\n      if (response.metafile)\n        result.metafile = JSON.parse(response.metafile);\n      if (response.mangleCache)\n        result.mangleCache = response.mangleCache;\n      if (response.writeToStdout !== void 0)\n        console.log(decodeUTF8(response.writeToStdout).replace(/\\n$/, \"\"));\n    };\n    let buildResponseToResult = (response, callback2) => {\n      let result = {\n        errors: replaceDetailsInMessages(response.errors, details),\n        warnings: replaceDetailsInMessages(response.warnings, details)\n      };\n      copyResponseToResult(response, result);\n      runOnEndCallbacks(result, logPluginError, () => {\n        if (result.errors.length > 0) {\n          return callback2(failureErrorWithLog(\"Build failed\", result.errors, result.warnings), null);\n        }\n        if (response.rebuild) {\n          if (!rebuild) {\n            let isDisposed = false;\n            rebuild = () => new Promise((resolve, reject) => {\n              if (isDisposed || closeData.didClose)\n                throw new Error(\"Cannot rebuild\");\n              sendRequest(\n                refs,\n                { command: \"rebuild\", key: buildKey },\n                (error2, response2) => {\n                  if (error2) {\n                    const message = { id: \"\", pluginName: \"\", text: error2, location: null, notes: [], detail: void 0 };\n                    return callback2(failureErrorWithLog(\"Build failed\", [message], []), null);\n                  }\n                  buildResponseToResult(response2, (error3, result3) => {\n                    if (error3)\n                      reject(error3);\n                    else\n                      resolve(result3);\n                  });\n                }\n              );\n            });\n            refs.ref();\n            rebuild.dispose = () => {\n              if (isDisposed)\n                return;\n              isDisposed = true;\n              sendRequest(refs, { command: \"rebuild-dispose\", key: buildKey }, () => {\n              });\n              refs.unref();\n            };\n          }\n          result.rebuild = rebuild;\n        }\n        if (response.watch) {\n          if (!stop) {\n            let isStopped = false;\n            refs.ref();\n            stop = () => {\n              if (isStopped)\n                return;\n              isStopped = true;\n              delete requestCallbacks[\"watch-rebuild\"];\n              sendRequest(refs, { command: \"watch-stop\", key: buildKey }, () => {\n              });\n              refs.unref();\n            };\n            if (watch) {\n              requestCallbacks[\"watch-rebuild\"] = (id, request2) => {\n                try {\n                  let watchResponse = request2.args;\n                  let result2 = {\n                    errors: replaceDetailsInMessages(watchResponse.errors, details),\n                    warnings: replaceDetailsInMessages(watchResponse.warnings, details)\n                  };\n                  copyResponseToResult(watchResponse, result2);\n                  runOnEndCallbacks(result2, logPluginError, () => {\n                    if (result2.errors.length > 0) {\n                      if (watch.onRebuild)\n                        watch.onRebuild(failureErrorWithLog(\"Build failed\", result2.errors, result2.warnings), null);\n                      return;\n                    }\n                    result2.stop = stop;\n                    if (watch.onRebuild)\n                      watch.onRebuild(null, result2);\n                  });\n                } catch (err) {\n                  console.error(err);\n                }\n                sendResponse(id, {});\n              };\n            }\n          }\n          result.stop = stop;\n        }\n        callback2(null, result);\n      });\n    };\n    if (write && streamIn.isWriteUnavailable)\n      throw new Error(`The \"write\" option is unavailable in this environment`);\n    if (incremental && streamIn.isSync)\n      throw new Error(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch && streamIn.isSync)\n      throw new Error(`Cannot use \"watch\" with a synchronous build`);\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      if (serve2) {\n        let serveResponse = response;\n        let isStopped = false;\n        refs.ref();\n        let result = {\n          port: serveResponse.port,\n          host: serveResponse.host,\n          wait: serve2.wait,\n          stop() {\n            if (isStopped)\n              return;\n            isStopped = true;\n            serve2.stop();\n            refs.unref();\n          }\n        };\n        refs.ref();\n        serve2.wait.then(refs.unref, refs.unref);\n        return callback(null, result);\n      }\n      return buildResponseToResult(response, callback);\n    });\n  }\n}\nvar buildServeData = (buildKey, sendRequest, sendResponse, refs, requestCallbacks, options, request) => {\n  let keys = {};\n  let port = getFlag(options, keys, \"port\", mustBeInteger);\n  let host = getFlag(options, keys, \"host\", mustBeString);\n  let servedir = getFlag(options, keys, \"servedir\", mustBeString);\n  let onRequest = getFlag(options, keys, \"onRequest\", mustBeFunction);\n  let wait = new Promise((resolve, reject) => {\n    requestCallbacks[\"serve-wait\"] = (id, request2) => {\n      if (request2.error !== null)\n        reject(new Error(request2.error));\n      else\n        resolve();\n      sendResponse(id, {});\n    };\n  });\n  request.serve = {};\n  checkForInvalidFlags(options, keys, `in serve() call`);\n  if (port !== void 0)\n    request.serve.port = port;\n  if (host !== void 0)\n    request.serve.host = host;\n  if (servedir !== void 0)\n    request.serve.servedir = servedir;\n  requestCallbacks[\"serve-request\"] = (id, request2) => {\n    if (onRequest)\n      onRequest(request2.args);\n    sendResponse(id, {});\n  };\n  return {\n    wait,\n    stop() {\n      sendRequest(refs, { command: \"serve-stop\", key: buildKey }, () => {\n      });\n    }\n  };\n};\nvar handlePlugins = (buildKey, sendRequest, sendResponse, refs, streamIn, requestCallbacks, initialOptions, plugins, details) => __async(void 0, null, function* () {\n  let onStartCallbacks = [];\n  let onEndCallbacks = [];\n  let onResolveCallbacks = {};\n  let onLoadCallbacks = {};\n  let nextCallbackID = 0;\n  let i = 0;\n  let requestPlugins = [];\n  let isSetupDone = false;\n  plugins = [...plugins];\n  for (let item of plugins) {\n    let keys = {};\n    if (typeof item !== \"object\")\n      throw new Error(`Plugin at index ${i} must be an object`);\n    const name = getFlag(item, keys, \"name\", mustBeString);\n    if (typeof name !== \"string\" || name === \"\")\n      throw new Error(`Plugin at index ${i} is missing a name`);\n    try {\n      let setup = getFlag(item, keys, \"setup\", mustBeFunction);\n      if (typeof setup !== \"function\")\n        throw new Error(`Plugin is missing a setup function`);\n      checkForInvalidFlags(item, keys, `on plugin ${quote(name)}`);\n      let plugin = {\n        name,\n        onResolve: [],\n        onLoad: []\n      };\n      i++;\n      let resolve = (path, options = {}) => {\n        if (!isSetupDone)\n          throw new Error('Cannot call \"resolve\" before plugin setup has completed');\n        if (typeof path !== \"string\")\n          throw new Error(`The path to resolve must be a string`);\n        let keys2 = /* @__PURE__ */ Object.create(null);\n        let pluginName = getFlag(options, keys2, \"pluginName\", mustBeString);\n        let importer = getFlag(options, keys2, \"importer\", mustBeString);\n        let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n        let resolveDir = getFlag(options, keys2, \"resolveDir\", mustBeString);\n        let kind = getFlag(options, keys2, \"kind\", mustBeString);\n        let pluginData = getFlag(options, keys2, \"pluginData\", canBeAnything);\n        checkForInvalidFlags(options, keys2, \"in resolve() call\");\n        return new Promise((resolve2, reject) => {\n          const request = {\n            command: \"resolve\",\n            path,\n            key: buildKey,\n            pluginName: name\n          };\n          if (pluginName != null)\n            request.pluginName = pluginName;\n          if (importer != null)\n            request.importer = importer;\n          if (namespace != null)\n            request.namespace = namespace;\n          if (resolveDir != null)\n            request.resolveDir = resolveDir;\n          if (kind != null)\n            request.kind = kind;\n          else\n            throw new Error(`Must specify \"kind\" when calling \"resolve\"`);\n          if (pluginData != null)\n            request.pluginData = details.store(pluginData);\n          sendRequest(refs, request, (error, response) => {\n            if (error !== null)\n              reject(new Error(error));\n            else\n              resolve2({\n                errors: replaceDetailsInMessages(response.errors, details),\n                warnings: replaceDetailsInMessages(response.warnings, details),\n                path: response.path,\n                external: response.external,\n                sideEffects: response.sideEffects,\n                namespace: response.namespace,\n                suffix: response.suffix,\n                pluginData: details.load(response.pluginData)\n              });\n          });\n        });\n      };\n      let promise = setup({\n        initialOptions,\n        resolve,\n        onStart(callback) {\n          let registeredText = `This error came from the \"onStart\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onStart\");\n          onStartCallbacks.push({ name, callback, note: registeredNote });\n        },\n        onEnd(callback) {\n          let registeredText = `This error came from the \"onEnd\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onEnd\");\n          onEndCallbacks.push({ name, callback, note: registeredNote });\n        },\n        onResolve(options, callback) {\n          let registeredText = `This error came from the \"onResolve\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onResolve\");\n          let keys2 = {};\n          let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n          let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n          checkForInvalidFlags(options, keys2, `in onResolve() call for plugin ${quote(name)}`);\n          if (filter == null)\n            throw new Error(`onResolve() call is missing a filter`);\n          let id = nextCallbackID++;\n          onResolveCallbacks[id] = { name, callback, note: registeredNote };\n          plugin.onResolve.push({ id, filter: filter.source, namespace: namespace || \"\" });\n        },\n        onLoad(options, callback) {\n          let registeredText = `This error came from the \"onLoad\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onLoad\");\n          let keys2 = {};\n          let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n          let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n          checkForInvalidFlags(options, keys2, `in onLoad() call for plugin ${quote(name)}`);\n          if (filter == null)\n            throw new Error(`onLoad() call is missing a filter`);\n          let id = nextCallbackID++;\n          onLoadCallbacks[id] = { name, callback, note: registeredNote };\n          plugin.onLoad.push({ id, filter: filter.source, namespace: namespace || \"\" });\n        },\n        esbuild: streamIn.esbuild\n      });\n      if (promise)\n        yield promise;\n      requestPlugins.push(plugin);\n    } catch (e) {\n      return { ok: false, error: e, pluginName: name };\n    }\n  }\n  requestCallbacks[\"on-start\"] = (id, request) => __async(void 0, null, function* () {\n    let response = { errors: [], warnings: [] };\n    yield Promise.all(onStartCallbacks.map((_0) => __async(void 0, [_0], function* ({ name, callback, note }) {\n      try {\n        let result = yield callback();\n        if (result != null) {\n          if (typeof result !== \"object\")\n            throw new Error(`Expected onStart() callback in plugin ${quote(name)} to return an object`);\n          let keys = {};\n          let errors = getFlag(result, keys, \"errors\", mustBeArray);\n          let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n          checkForInvalidFlags(result, keys, `from onStart() callback in plugin ${quote(name)}`);\n          if (errors != null)\n            response.errors.push(...sanitizeMessages(errors, \"errors\", details, name));\n          if (warnings != null)\n            response.warnings.push(...sanitizeMessages(warnings, \"warnings\", details, name));\n        }\n      } catch (e) {\n        response.errors.push(extractErrorMessageV8(e, streamIn, details, note && note(), name));\n      }\n    })));\n    sendResponse(id, response);\n  });\n  requestCallbacks[\"on-resolve\"] = (id, request) => __async(void 0, null, function* () {\n    let response = {}, name = \"\", callback, note;\n    for (let id2 of request.ids) {\n      try {\n        ({ name, callback, note } = onResolveCallbacks[id2]);\n        let result = yield callback({\n          path: request.path,\n          importer: request.importer,\n          namespace: request.namespace,\n          resolveDir: request.resolveDir,\n          kind: request.kind,\n          pluginData: details.load(request.pluginData)\n        });\n        if (result != null) {\n          if (typeof result !== \"object\")\n            throw new Error(`Expected onResolve() callback in plugin ${quote(name)} to return an object`);\n          let keys = {};\n          let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n          let path = getFlag(result, keys, \"path\", mustBeString);\n          let namespace = getFlag(result, keys, \"namespace\", mustBeString);\n          let suffix = getFlag(result, keys, \"suffix\", mustBeString);\n          let external = getFlag(result, keys, \"external\", mustBeBoolean);\n          let sideEffects = getFlag(result, keys, \"sideEffects\", mustBeBoolean);\n          let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n          let errors = getFlag(result, keys, \"errors\", mustBeArray);\n          let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n          let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n          let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n          checkForInvalidFlags(result, keys, `from onResolve() callback in plugin ${quote(name)}`);\n          response.id = id2;\n          if (pluginName != null)\n            response.pluginName = pluginName;\n          if (path != null)\n            response.path = path;\n          if (namespace != null)\n            response.namespace = namespace;\n          if (suffix != null)\n            response.suffix = suffix;\n          if (external != null)\n            response.external = external;\n          if (sideEffects != null)\n            response.sideEffects = sideEffects;\n          if (pluginData != null)\n            response.pluginData = details.store(pluginData);\n          if (errors != null)\n            response.errors = sanitizeMessages(errors, \"errors\", details, name);\n          if (warnings != null)\n            response.warnings = sanitizeMessages(warnings, \"warnings\", details, name);\n          if (watchFiles != null)\n            response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n          if (watchDirs != null)\n            response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n          break;\n        }\n      } catch (e) {\n        response = { id: id2, errors: [extractErrorMessageV8(e, streamIn, details, note && note(), name)] };\n        break;\n      }\n    }\n    sendResponse(id, response);\n  });\n  requestCallbacks[\"on-load\"] = (id, request) => __async(void 0, null, function* () {\n    let response = {}, name = \"\", callback, note;\n    for (let id2 of request.ids) {\n      try {\n        ({ name, callback, note } = onLoadCallbacks[id2]);\n        let result = yield callback({\n          path: request.path,\n          namespace: request.namespace,\n          suffix: request.suffix,\n          pluginData: details.load(request.pluginData)\n        });\n        if (result != null) {\n          if (typeof result !== \"object\")\n            throw new Error(`Expected onLoad() callback in plugin ${quote(name)} to return an object`);\n          let keys = {};\n          let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n          let contents = getFlag(result, keys, \"contents\", mustBeStringOrUint8Array);\n          let resolveDir = getFlag(result, keys, \"resolveDir\", mustBeString);\n          let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n          let loader = getFlag(result, keys, \"loader\", mustBeString);\n          let errors = getFlag(result, keys, \"errors\", mustBeArray);\n          let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n          let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n          let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n          checkForInvalidFlags(result, keys, `from onLoad() callback in plugin ${quote(name)}`);\n          response.id = id2;\n          if (pluginName != null)\n            response.pluginName = pluginName;\n          if (contents instanceof Uint8Array)\n            response.contents = contents;\n          else if (contents != null)\n            response.contents = encodeUTF8(contents);\n          if (resolveDir != null)\n            response.resolveDir = resolveDir;\n          if (pluginData != null)\n            response.pluginData = details.store(pluginData);\n          if (loader != null)\n            response.loader = loader;\n          if (errors != null)\n            response.errors = sanitizeMessages(errors, \"errors\", details, name);\n          if (warnings != null)\n            response.warnings = sanitizeMessages(warnings, \"warnings\", details, name);\n          if (watchFiles != null)\n            response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n          if (watchDirs != null)\n            response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n          break;\n        }\n      } catch (e) {\n        response = { id: id2, errors: [extractErrorMessageV8(e, streamIn, details, note && note(), name)] };\n        break;\n      }\n    }\n    sendResponse(id, response);\n  });\n  let runOnEndCallbacks = (result, logPluginError, done) => done();\n  if (onEndCallbacks.length > 0) {\n    runOnEndCallbacks = (result, logPluginError, done) => {\n      (() => __async(void 0, null, function* () {\n        for (const { name, callback, note } of onEndCallbacks) {\n          try {\n            yield callback(result);\n          } catch (e) {\n            result.errors.push(yield new Promise((resolve) => logPluginError(e, name, note && note(), resolve)));\n          }\n        }\n      }))().then(done);\n    };\n  }\n  isSetupDone = true;\n  return {\n    ok: true,\n    requestPlugins,\n    runOnEndCallbacks\n  };\n});\nfunction createObjectStash() {\n  const map = /* @__PURE__ */ new Map();\n  let nextID = 0;\n  return {\n    load(id) {\n      return map.get(id);\n    },\n    store(value) {\n      if (value === void 0)\n        return -1;\n      const id = nextID++;\n      map.set(id, value);\n      return id;\n    }\n  };\n}\nfunction extractCallerV8(e, streamIn, ident) {\n  let note;\n  let tried = false;\n  return () => {\n    if (tried)\n      return note;\n    tried = true;\n    try {\n      let lines = (e.stack + \"\").split(\"\\n\");\n      lines.splice(1, 1);\n      let location2 = parseStackLinesV8(streamIn, lines, ident);\n      if (location2) {\n        note = { text: e.message, location: location2 };\n        return note;\n      }\n    } catch (e2) {\n    }\n  };\n}\nfunction extractErrorMessageV8(e, streamIn, stash, note, pluginName) {\n  let text = \"Internal error\";\n  let location2 = null;\n  try {\n    text = (e && e.message || e) + \"\";\n  } catch (e2) {\n  }\n  try {\n    location2 = parseStackLinesV8(streamIn, (e.stack + \"\").split(\"\\n\"), \"\");\n  } catch (e2) {\n  }\n  return { id: \"\", pluginName, text, location: location2, notes: note ? [note] : [], detail: stash ? stash.store(e) : -1 };\n}\nfunction parseStackLinesV8(streamIn, lines, ident) {\n  let at = \"    at \";\n  if (streamIn.readFileSync && !lines[0].startsWith(at) && lines[1].startsWith(at)) {\n    for (let i = 1; i < lines.length; i++) {\n      let line = lines[i];\n      if (!line.startsWith(at))\n        continue;\n      line = line.slice(at.length);\n      while (true) {\n        let match = /^(?:new |async )?\\S+ \\((.*)\\)$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^eval at \\S+ \\((.*)\\)(?:, \\S+:\\d+:\\d+)?$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^(\\S+):(\\d+):(\\d+)$/.exec(line);\n        if (match) {\n          let contents;\n          try {\n            contents = streamIn.readFileSync(match[1], \"utf8\");\n          } catch (e) {\n            break;\n          }\n          let lineText = contents.split(/\\r\\n|\\r|\\n|\\u2028|\\u2029/)[+match[2] - 1] || \"\";\n          let column = +match[3] - 1;\n          let length = lineText.slice(column, column + ident.length) === ident ? ident.length : 0;\n          return {\n            file: match[1],\n            namespace: \"file\",\n            line: +match[2],\n            column: encodeUTF8(lineText.slice(0, column)).length,\n            length: encodeUTF8(lineText.slice(column, column + length)).length,\n            lineText: lineText + \"\\n\" + lines.slice(1).join(\"\\n\"),\n            suggestion: \"\"\n          };\n        }\n        break;\n      }\n    }\n  }\n  return null;\n}\nfunction failureErrorWithLog(text, errors, warnings) {\n  let limit = 5;\n  let summary = errors.length < 1 ? \"\" : ` with ${errors.length} error${errors.length < 2 ? \"\" : \"s\"}:` + errors.slice(0, limit + 1).map((e, i) => {\n    if (i === limit)\n      return \"\\n...\";\n    if (!e.location)\n      return `\nerror: ${e.text}`;\n    let { file, line, column } = e.location;\n    let pluginText = e.pluginName ? `[plugin: ${e.pluginName}] ` : \"\";\n    return `\n${file}:${line}:${column}: ERROR: ${pluginText}${e.text}`;\n  }).join(\"\");\n  let error = new Error(`${text}${summary}`);\n  error.errors = errors;\n  error.warnings = warnings;\n  return error;\n}\nfunction replaceDetailsInMessages(messages, stash) {\n  for (const message of messages) {\n    message.detail = stash.load(message.detail);\n  }\n  return messages;\n}\nfunction sanitizeLocation(location2, where) {\n  if (location2 == null)\n    return null;\n  let keys = {};\n  let file = getFlag(location2, keys, \"file\", mustBeString);\n  let namespace = getFlag(location2, keys, \"namespace\", mustBeString);\n  let line = getFlag(location2, keys, \"line\", mustBeInteger);\n  let column = getFlag(location2, keys, \"column\", mustBeInteger);\n  let length = getFlag(location2, keys, \"length\", mustBeInteger);\n  let lineText = getFlag(location2, keys, \"lineText\", mustBeString);\n  let suggestion = getFlag(location2, keys, \"suggestion\", mustBeString);\n  checkForInvalidFlags(location2, keys, where);\n  return {\n    file: file || \"\",\n    namespace: namespace || \"\",\n    line: line || 0,\n    column: column || 0,\n    length: length || 0,\n    lineText: lineText || \"\",\n    suggestion: suggestion || \"\"\n  };\n}\nfunction sanitizeMessages(messages, property, stash, fallbackPluginName) {\n  let messagesClone = [];\n  let index = 0;\n  for (const message of messages) {\n    let keys = {};\n    let id = getFlag(message, keys, \"id\", mustBeString);\n    let pluginName = getFlag(message, keys, \"pluginName\", mustBeString);\n    let text = getFlag(message, keys, \"text\", mustBeString);\n    let location2 = getFlag(message, keys, \"location\", mustBeObjectOrNull);\n    let notes = getFlag(message, keys, \"notes\", mustBeArray);\n    let detail = getFlag(message, keys, \"detail\", canBeAnything);\n    let where = `in element ${index} of \"${property}\"`;\n    checkForInvalidFlags(message, keys, where);\n    let notesClone = [];\n    if (notes) {\n      for (const note of notes) {\n        let noteKeys = {};\n        let noteText = getFlag(note, noteKeys, \"text\", mustBeString);\n        let noteLocation = getFlag(note, noteKeys, \"location\", mustBeObjectOrNull);\n        checkForInvalidFlags(note, noteKeys, where);\n        notesClone.push({\n          text: noteText || \"\",\n          location: sanitizeLocation(noteLocation, where)\n        });\n      }\n    }\n    messagesClone.push({\n      id: id || \"\",\n      pluginName: pluginName || fallbackPluginName,\n      text: text || \"\",\n      location: sanitizeLocation(location2, where),\n      notes: notesClone,\n      detail: stash ? stash.store(detail) : -1\n    });\n    index++;\n  }\n  return messagesClone;\n}\nfunction sanitizeStringArray(values, property) {\n  const result = [];\n  for (const value of values) {\n    if (typeof value !== \"string\")\n      throw new Error(`${quote(property)} must be an array of strings`);\n    result.push(value);\n  }\n  return result;\n}\nfunction convertOutputFiles({ path, contents }) {\n  let text = null;\n  return {\n    path,\n    contents,\n    get text() {\n      const binary = this.contents;\n      if (text === null || binary !== contents) {\n        contents = binary;\n        text = decodeUTF8(binary);\n      }\n      return text;\n    }\n  };\n}\n\n// lib/npm/browser.ts\nvar version = \"0.16.10\";\nvar build = (options) => ensureServiceIsRunning().build(options);\nvar serve = () => {\n  throw new Error(`The \"serve\" API only works in node`);\n};\nvar transform = (input, options) => ensureServiceIsRunning().transform(input, options);\nvar formatMessages = (messages, options) => ensureServiceIsRunning().formatMessages(messages, options);\nvar analyzeMetafile = (metafile, options) => ensureServiceIsRunning().analyzeMetafile(metafile, options);\nvar buildSync = () => {\n  throw new Error(`The \"buildSync\" API only works in node`);\n};\nvar transformSync = () => {\n  throw new Error(`The \"transformSync\" API only works in node`);\n};\nvar formatMessagesSync = () => {\n  throw new Error(`The \"formatMessagesSync\" API only works in node`);\n};\nvar analyzeMetafileSync = () => {\n  throw new Error(`The \"analyzeMetafileSync\" API only works in node`);\n};\nvar initializePromise;\nvar longLivedService;\nvar ensureServiceIsRunning = () => {\n  if (longLivedService)\n    return longLivedService;\n  if (initializePromise)\n    throw new Error('You need to wait for the promise returned from \"initialize\" to be resolved before calling this');\n  throw new Error('You need to call \"initialize\" before calling this');\n};\nvar initialize = (options) => {\n  options = validateInitializeOptions(options || {});\n  let wasmURL = options.wasmURL;\n  let wasmModule = options.wasmModule;\n  let useWorker = options.worker !== false;\n  if (!wasmURL && !wasmModule)\n    throw new Error('Must provide either the \"wasmURL\" option or the \"wasmModule\" option');\n  if (initializePromise)\n    throw new Error('Cannot call \"initialize\" more than once');\n  initializePromise = startRunningService(wasmURL || \"\", wasmModule, useWorker);\n  initializePromise.catch(() => {\n    initializePromise = void 0;\n  });\n  return initializePromise;\n};\nvar startRunningService = (wasmURL, wasmModule, useWorker) => __async(void 0, null, function* () {\n  let worker;\n  if (useWorker) {\n    let blob = new Blob([`onmessage=${'((postMessage) => {\\n      // Copyright 2018 The Go Authors. All rights reserved.\\n      // Use of this source code is governed by a BSD-style\\n      // license that can be found in the LICENSE file.\\n      var __async = (__this, __arguments, generator) => {\\n        return new Promise((resolve, reject) => {\\n          var fulfilled = (value) => {\\n            try {\\n              step(generator.next(value));\\n            } catch (e) {\\n              reject(e);\\n            }\\n          };\\n          var rejected = (value) => {\\n            try {\\n              step(generator.throw(value));\\n            } catch (e) {\\n              reject(e);\\n            }\\n          };\\n          var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\\n          step((generator = generator.apply(__this, __arguments)).next());\\n        });\\n      };\\n      let onmessage;\\n      let globalThis = {};\\n      for (let o = self; o; o = Object.getPrototypeOf(o))\\n        for (let k of Object.getOwnPropertyNames(o))\\n          if (!(k in globalThis))\\n            Object.defineProperty(globalThis, k, { get: () => self[k] });\\n      \"use strict\";\\n      (() => {\\n        const enosys = () => {\\n          const err = new Error(\"not implemented\");\\n          err.code = \"ENOSYS\";\\n          return err;\\n        };\\n        if (!globalThis.fs) {\\n          let outputBuf = \"\";\\n          globalThis.fs = {\\n            constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 },\\n            writeSync(fd, buf) {\\n              outputBuf += decoder.decode(buf);\\n              const nl = outputBuf.lastIndexOf(\"\\\\n\");\\n              if (nl != -1) {\\n                console.log(outputBuf.substr(0, nl));\\n                outputBuf = outputBuf.substr(nl + 1);\\n              }\\n              return buf.length;\\n            },\\n            write(fd, buf, offset, length, position, callback) {\\n              if (offset !== 0 || length !== buf.length || position !== null) {\\n                callback(enosys());\\n                return;\\n              }\\n              const n = this.writeSync(fd, buf);\\n              callback(null, n);\\n            },\\n            chmod(path, mode, callback) {\\n              callback(enosys());\\n            },\\n            chown(path, uid, gid, callback) {\\n              callback(enosys());\\n            },\\n            close(fd, callback) {\\n              callback(enosys());\\n            },\\n            fchmod(fd, mode, callback) {\\n              callback(enosys());\\n            },\\n            fchown(fd, uid, gid, callback) {\\n              callback(enosys());\\n            },\\n            fstat(fd, callback) {\\n              callback(enosys());\\n            },\\n            fsync(fd, callback) {\\n              callback(null);\\n            },\\n            ftruncate(fd, length, callback) {\\n              callback(enosys());\\n            },\\n            lchown(path, uid, gid, callback) {\\n              callback(enosys());\\n            },\\n            link(path, link, callback) {\\n              callback(enosys());\\n            },\\n            lstat(path, callback) {\\n              callback(enosys());\\n            },\\n            mkdir(path, perm, callback) {\\n              callback(enosys());\\n            },\\n            open(path, flags, mode, callback) {\\n              callback(enosys());\\n            },\\n            read(fd, buffer, offset, length, position, callback) {\\n              callback(enosys());\\n            },\\n            readdir(path, callback) {\\n              callback(enosys());\\n            },\\n            readlink(path, callback) {\\n              callback(enosys());\\n            },\\n            rename(from, to, callback) {\\n              callback(enosys());\\n            },\\n            rmdir(path, callback) {\\n              callback(enosys());\\n            },\\n            stat(path, callback) {\\n              callback(enosys());\\n            },\\n            symlink(path, link, callback) {\\n              callback(enosys());\\n            },\\n            truncate(path, length, callback) {\\n              callback(enosys());\\n            },\\n            unlink(path, callback) {\\n              callback(enosys());\\n            },\\n            utimes(path, atime, mtime, callback) {\\n              callback(enosys());\\n            }\\n          };\\n        }\\n        if (!globalThis.process) {\\n          globalThis.process = {\\n            getuid() {\\n              return -1;\\n            },\\n            getgid() {\\n              return -1;\\n            },\\n            geteuid() {\\n              return -1;\\n            },\\n            getegid() {\\n              return -1;\\n            },\\n            getgroups() {\\n              throw enosys();\\n            },\\n            pid: -1,\\n            ppid: -1,\\n            umask() {\\n              throw enosys();\\n            },\\n            cwd() {\\n              throw enosys();\\n            },\\n            chdir() {\\n              throw enosys();\\n            }\\n          };\\n        }\\n        if (!globalThis.crypto) {\\n          throw new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\\n        }\\n        if (!globalThis.performance) {\\n          throw new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\\n        }\\n        if (!globalThis.TextEncoder) {\\n          throw new Error(\"globalThis.TextEncoder is not available, polyfill required\");\\n        }\\n        if (!globalThis.TextDecoder) {\\n          throw new Error(\"globalThis.TextDecoder is not available, polyfill required\");\\n        }\\n        const encoder = new TextEncoder(\"utf-8\");\\n        const decoder = new TextDecoder(\"utf-8\");\\n        globalThis.Go = class {\\n          constructor() {\\n            this.argv = [\"js\"];\\n            this.env = {};\\n            this.exit = (code) => {\\n              if (code !== 0) {\\n                console.warn(\"exit code:\", code);\\n              }\\n            };\\n            this._exitPromise = new Promise((resolve) => {\\n              this._resolveExitPromise = resolve;\\n            });\\n            this._pendingEvent = null;\\n            this._scheduledTimeouts = /* @__PURE__ */ new Map();\\n            this._nextCallbackTimeoutID = 1;\\n            const setInt64 = (addr, v) => {\\n              this.mem.setUint32(addr + 0, v, true);\\n              this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\\n            };\\n            const getInt64 = (addr) => {\\n              const low = this.mem.getUint32(addr + 0, true);\\n              const high = this.mem.getInt32(addr + 4, true);\\n              return low + high * 4294967296;\\n            };\\n            const loadValue = (addr) => {\\n              const f = this.mem.getFloat64(addr, true);\\n              if (f === 0) {\\n                return void 0;\\n              }\\n              if (!isNaN(f)) {\\n                return f;\\n              }\\n              const id = this.mem.getUint32(addr, true);\\n              return this._values[id];\\n            };\\n            const storeValue = (addr, v) => {\\n              const nanHead = 2146959360;\\n              if (typeof v === \"number\" && v !== 0) {\\n                if (isNaN(v)) {\\n                  this.mem.setUint32(addr + 4, nanHead, true);\\n                  this.mem.setUint32(addr, 0, true);\\n                  return;\\n                }\\n                this.mem.setFloat64(addr, v, true);\\n                return;\\n              }\\n              if (v === void 0) {\\n                this.mem.setFloat64(addr, 0, true);\\n                return;\\n              }\\n              let id = this._ids.get(v);\\n              if (id === void 0) {\\n                id = this._idPool.pop();\\n                if (id === void 0) {\\n                  id = this._values.length;\\n                }\\n                this._values[id] = v;\\n                this._goRefCounts[id] = 0;\\n                this._ids.set(v, id);\\n              }\\n              this._goRefCounts[id]++;\\n              let typeFlag = 0;\\n              switch (typeof v) {\\n                case \"object\":\\n                  if (v !== null) {\\n                    typeFlag = 1;\\n                  }\\n                  break;\\n                case \"string\":\\n                  typeFlag = 2;\\n                  break;\\n                case \"symbol\":\\n                  typeFlag = 3;\\n                  break;\\n                case \"function\":\\n                  typeFlag = 4;\\n                  break;\\n              }\\n              this.mem.setUint32(addr + 4, nanHead | typeFlag, true);\\n              this.mem.setUint32(addr, id, true);\\n            };\\n            const loadSlice = (addr) => {\\n              const array = getInt64(addr + 0);\\n              const len = getInt64(addr + 8);\\n              return new Uint8Array(this._inst.exports.mem.buffer, array, len);\\n            };\\n            const loadSliceOfValues = (addr) => {\\n              const array = getInt64(addr + 0);\\n              const len = getInt64(addr + 8);\\n              const a = new Array(len);\\n              for (let i = 0; i < len; i++) {\\n                a[i] = loadValue(array + i * 8);\\n              }\\n              return a;\\n            };\\n            const loadString = (addr) => {\\n              const saddr = getInt64(addr + 0);\\n              const len = getInt64(addr + 8);\\n              return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\\n            };\\n            const timeOrigin = Date.now() - performance.now();\\n            this.importObject = {\\n              go: {\\n                \"runtime.wasmExit\": (sp) => {\\n                  sp >>>= 0;\\n                  const code = this.mem.getInt32(sp + 8, true);\\n                  this.exited = true;\\n                  delete this._inst;\\n                  delete this._values;\\n                  delete this._goRefCounts;\\n                  delete this._ids;\\n                  delete this._idPool;\\n                  this.exit(code);\\n                },\\n                \"runtime.wasmWrite\": (sp) => {\\n                  sp >>>= 0;\\n                  const fd = getInt64(sp + 8);\\n                  const p = getInt64(sp + 16);\\n                  const n = this.mem.getInt32(sp + 24, true);\\n                  globalThis.fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\\n                },\\n                \"runtime.resetMemoryDataView\": (sp) => {\\n                  sp >>>= 0;\\n                  this.mem = new DataView(this._inst.exports.mem.buffer);\\n                },\\n                \"runtime.nanotime1\": (sp) => {\\n                  sp >>>= 0;\\n                  setInt64(sp + 8, (timeOrigin + performance.now()) * 1e6);\\n                },\\n                \"runtime.walltime\": (sp) => {\\n                  sp >>>= 0;\\n                  const msec = new Date().getTime();\\n                  setInt64(sp + 8, msec / 1e3);\\n                  this.mem.setInt32(sp + 16, msec % 1e3 * 1e6, true);\\n                },\\n                \"runtime.scheduleTimeoutEvent\": (sp) => {\\n                  sp >>>= 0;\\n                  const id = this._nextCallbackTimeoutID;\\n                  this._nextCallbackTimeoutID++;\\n                  this._scheduledTimeouts.set(id, setTimeout(\\n                    () => {\\n                      this._resume();\\n                      while (this._scheduledTimeouts.has(id)) {\\n                        console.warn(\"scheduleTimeoutEvent: missed timeout event\");\\n                        this._resume();\\n                      }\\n                    },\\n                    getInt64(sp + 8) + 1\\n                  ));\\n                  this.mem.setInt32(sp + 16, id, true);\\n                },\\n                \"runtime.clearTimeoutEvent\": (sp) => {\\n                  sp >>>= 0;\\n                  const id = this.mem.getInt32(sp + 8, true);\\n                  clearTimeout(this._scheduledTimeouts.get(id));\\n                  this._scheduledTimeouts.delete(id);\\n                },\\n                \"runtime.getRandomData\": (sp) => {\\n                  sp >>>= 0;\\n                  crypto.getRandomValues(loadSlice(sp + 8));\\n                },\\n                \"syscall/js.finalizeRef\": (sp) => {\\n                  sp >>>= 0;\\n                  const id = this.mem.getUint32(sp + 8, true);\\n                  this._goRefCounts[id]--;\\n                  if (this._goRefCounts[id] === 0) {\\n                    const v = this._values[id];\\n                    this._values[id] = null;\\n                    this._ids.delete(v);\\n                    this._idPool.push(id);\\n                  }\\n                },\\n                \"syscall/js.stringVal\": (sp) => {\\n                  sp >>>= 0;\\n                  storeValue(sp + 24, loadString(sp + 8));\\n                },\\n                \"syscall/js.valueGet\": (sp) => {\\n                  sp >>>= 0;\\n                  const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\\n                  sp = this._inst.exports.getsp() >>> 0;\\n                  storeValue(sp + 32, result);\\n                },\\n                \"syscall/js.valueSet\": (sp) => {\\n                  sp >>>= 0;\\n                  Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\\n                },\\n                \"syscall/js.valueDelete\": (sp) => {\\n                  sp >>>= 0;\\n                  Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\\n                },\\n                \"syscall/js.valueIndex\": (sp) => {\\n                  sp >>>= 0;\\n                  storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\\n                },\\n                \"syscall/js.valueSetIndex\": (sp) => {\\n                  sp >>>= 0;\\n                  Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\\n                },\\n                \"syscall/js.valueCall\": (sp) => {\\n                  sp >>>= 0;\\n                  try {\\n                    const v = loadValue(sp + 8);\\n                    const m = Reflect.get(v, loadString(sp + 16));\\n                    const args = loadSliceOfValues(sp + 32);\\n                    const result = Reflect.apply(m, v, args);\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 56, result);\\n                    this.mem.setUint8(sp + 64, 1);\\n                  } catch (err) {\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 56, err);\\n                    this.mem.setUint8(sp + 64, 0);\\n                  }\\n                },\\n                \"syscall/js.valueInvoke\": (sp) => {\\n                  sp >>>= 0;\\n                  try {\\n                    const v = loadValue(sp + 8);\\n                    const args = loadSliceOfValues(sp + 16);\\n                    const result = Reflect.apply(v, void 0, args);\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, result);\\n                    this.mem.setUint8(sp + 48, 1);\\n                  } catch (err) {\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, err);\\n                    this.mem.setUint8(sp + 48, 0);\\n                  }\\n                },\\n                \"syscall/js.valueNew\": (sp) => {\\n                  sp >>>= 0;\\n                  try {\\n                    const v = loadValue(sp + 8);\\n                    const args = loadSliceOfValues(sp + 16);\\n                    const result = Reflect.construct(v, args);\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, result);\\n                    this.mem.setUint8(sp + 48, 1);\\n                  } catch (err) {\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, err);\\n                    this.mem.setUint8(sp + 48, 0);\\n                  }\\n                },\\n                \"syscall/js.valueLength\": (sp) => {\\n                  sp >>>= 0;\\n                  setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\\n                },\\n                \"syscall/js.valuePrepareString\": (sp) => {\\n                  sp >>>= 0;\\n                  const str = encoder.encode(String(loadValue(sp + 8)));\\n                  storeValue(sp + 16, str);\\n                  setInt64(sp + 24, str.length);\\n                },\\n                \"syscall/js.valueLoadString\": (sp) => {\\n                  sp >>>= 0;\\n                  const str = loadValue(sp + 8);\\n                  loadSlice(sp + 16).set(str);\\n                },\\n                \"syscall/js.valueInstanceOf\": (sp) => {\\n                  sp >>>= 0;\\n                  this.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16) ? 1 : 0);\\n                },\\n                \"syscall/js.copyBytesToGo\": (sp) => {\\n                  sp >>>= 0;\\n                  const dst = loadSlice(sp + 8);\\n                  const src = loadValue(sp + 32);\\n                  if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\\n                    this.mem.setUint8(sp + 48, 0);\\n                    return;\\n                  }\\n                  const toCopy = src.subarray(0, dst.length);\\n                  dst.set(toCopy);\\n                  setInt64(sp + 40, toCopy.length);\\n                  this.mem.setUint8(sp + 48, 1);\\n                },\\n                \"syscall/js.copyBytesToJS\": (sp) => {\\n                  sp >>>= 0;\\n                  const dst = loadValue(sp + 8);\\n                  const src = loadSlice(sp + 16);\\n                  if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\\n                    this.mem.setUint8(sp + 48, 0);\\n                    return;\\n                  }\\n                  const toCopy = src.subarray(0, dst.length);\\n                  dst.set(toCopy);\\n                  setInt64(sp + 40, toCopy.length);\\n                  this.mem.setUint8(sp + 48, 1);\\n                },\\n                \"debug\": (value) => {\\n                  console.log(value);\\n                }\\n              }\\n            };\\n          }\\n          run(instance) {\\n            return __async(this, null, function* () {\\n              if (!(instance instanceof WebAssembly.Instance)) {\\n                throw new Error(\"Go.run: WebAssembly.Instance expected\");\\n              }\\n              this._inst = instance;\\n              this.mem = new DataView(this._inst.exports.mem.buffer);\\n              this._values = [\\n                NaN,\\n                0,\\n                null,\\n                true,\\n                false,\\n                globalThis,\\n                this\\n              ];\\n              this._goRefCounts = new Array(this._values.length).fill(Infinity);\\n              this._ids = /* @__PURE__ */ new Map([\\n                [0, 1],\\n                [null, 2],\\n                [true, 3],\\n                [false, 4],\\n                [globalThis, 5],\\n                [this, 6]\\n              ]);\\n              this._idPool = [];\\n              this.exited = false;\\n              let offset = 4096;\\n              const strPtr = (str) => {\\n                const ptr = offset;\\n                const bytes = encoder.encode(str + \"\\\\0\");\\n                new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\\n                offset += bytes.length;\\n                if (offset % 8 !== 0) {\\n                  offset += 8 - offset % 8;\\n                }\\n                return ptr;\\n              };\\n              const argc = this.argv.length;\\n              const argvPtrs = [];\\n              this.argv.forEach((arg) => {\\n                argvPtrs.push(strPtr(arg));\\n              });\\n              argvPtrs.push(0);\\n              const keys = Object.keys(this.env).sort();\\n              keys.forEach((key) => {\\n                argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\\n              });\\n              argvPtrs.push(0);\\n              const argv = offset;\\n              argvPtrs.forEach((ptr) => {\\n                this.mem.setUint32(offset, ptr, true);\\n                this.mem.setUint32(offset + 4, 0, true);\\n                offset += 8;\\n              });\\n              const wasmMinDataAddr = 4096 + 8192;\\n              if (offset >= wasmMinDataAddr) {\\n                throw new Error(\"total length of command line and environment variables exceeds limit\");\\n              }\\n              this._inst.exports.run(argc, argv);\\n              if (this.exited) {\\n                this._resolveExitPromise();\\n              }\\n              yield this._exitPromise;\\n            });\\n          }\\n          _resume() {\\n            if (this.exited) {\\n              throw new Error(\"Go program has already exited\");\\n            }\\n            this._inst.exports.resume();\\n            if (this.exited) {\\n              this._resolveExitPromise();\\n            }\\n          }\\n          _makeFuncWrapper(id) {\\n            const go = this;\\n            return function() {\\n              const event = { id, this: this, args: arguments };\\n              go._pendingEvent = event;\\n              go._resume();\\n              return event.result;\\n            };\\n          }\\n        };\\n      })();\\n      onmessage = ({ data: wasm }) => {\\n        let decoder = new TextDecoder();\\n        let fs = globalThis.fs;\\n        let stderr = \"\";\\n        fs.writeSync = (fd, buffer) => {\\n          if (fd === 1) {\\n            postMessage(buffer);\\n          } else if (fd === 2) {\\n            stderr += decoder.decode(buffer);\\n            let parts = stderr.split(\"\\\\n\");\\n            if (parts.length > 1)\\n              console.log(parts.slice(0, -1).join(\"\\\\n\"));\\n            stderr = parts[parts.length - 1];\\n          } else {\\n            throw new Error(\"Bad write\");\\n          }\\n          return buffer.length;\\n        };\\n        let stdin = [];\\n        let resumeStdin;\\n        let stdinPos = 0;\\n        onmessage = ({ data }) => {\\n          if (data.length > 0) {\\n            stdin.push(data);\\n            if (resumeStdin)\\n              resumeStdin();\\n          }\\n        };\\n        fs.read = (fd, buffer, offset, length, position, callback) => {\\n          if (fd !== 0 || offset !== 0 || length !== buffer.length || position !== null) {\\n            throw new Error(\"Bad read\");\\n          }\\n          if (stdin.length === 0) {\\n            resumeStdin = () => fs.read(fd, buffer, offset, length, position, callback);\\n            return;\\n          }\\n          let first = stdin[0];\\n          let count = Math.max(0, Math.min(length, first.length - stdinPos));\\n          buffer.set(first.subarray(stdinPos, stdinPos + count), offset);\\n          stdinPos += count;\\n          if (stdinPos === first.length) {\\n            stdin.shift();\\n            stdinPos = 0;\\n          }\\n          callback(null, count);\\n        };\\n        let go = new globalThis.Go();\\n        go.argv = [\"\", `--service=${\"0.16.10\"}`];\\n        tryToInstantiateModule(wasm, go).then(\\n          (instance) => {\\n            postMessage(null);\\n            go.run(instance);\\n          },\\n          (error) => {\\n            postMessage(error);\\n          }\\n        );\\n      };\\n      function tryToInstantiateModule(wasm, go) {\\n        return __async(this, null, function* () {\\n          if (wasm instanceof WebAssembly.Module) {\\n            return WebAssembly.instantiate(wasm, go.importObject);\\n          }\\n          const res = yield fetch(wasm);\\n          if (!res.ok)\\n            throw new Error(`Failed to download ${JSON.stringify(wasm)}`);\\n          if (\"instantiateStreaming\" in WebAssembly && /^application\\\\/wasm($|;)/i.test(res.headers.get(\"Content-Type\") || \"\")) {\\n            const result2 = yield WebAssembly.instantiateStreaming(res, go.importObject);\\n            return result2.instance;\\n          }\\n          const bytes = yield res.arrayBuffer();\\n          const result = yield WebAssembly.instantiate(bytes, go.importObject);\\n          return result.instance;\\n        });\\n      }\\n      return (m) => onmessage(m);\\n    })'}(postMessage)`], { type: \"text/javascript\" });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    let onmessage = ((postMessage) => {\n      // Copyright 2018 The Go Authors. All rights reserved.\n      // Use of this source code is governed by a BSD-style\n      // license that can be found in the LICENSE file.\n      var __async = (__this, __arguments, generator) => {\n        return new Promise((resolve, reject) => {\n          var fulfilled = (value) => {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          };\n          var rejected = (value) => {\n            try {\n              step(generator.throw(value));\n            } catch (e) {\n              reject(e);\n            }\n          };\n          var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n          step((generator = generator.apply(__this, __arguments)).next());\n        });\n      };\n      let onmessage;\n      let globalThis = {};\n      for (let o = self; o; o = Object.getPrototypeOf(o))\n        for (let k of Object.getOwnPropertyNames(o))\n          if (!(k in globalThis))\n            Object.defineProperty(globalThis, k, { get: () => self[k] });\n      \"use strict\";\n      (() => {\n        const enosys = () => {\n          const err = new Error(\"not implemented\");\n          err.code = \"ENOSYS\";\n          return err;\n        };\n        if (!globalThis.fs) {\n          let outputBuf = \"\";\n          globalThis.fs = {\n            constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 },\n            writeSync(fd, buf) {\n              outputBuf += decoder.decode(buf);\n              const nl = outputBuf.lastIndexOf(\"\\n\");\n              if (nl != -1) {\n                console.log(outputBuf.substr(0, nl));\n                outputBuf = outputBuf.substr(nl + 1);\n              }\n              return buf.length;\n            },\n            write(fd, buf, offset, length, position, callback) {\n              if (offset !== 0 || length !== buf.length || position !== null) {\n                callback(enosys());\n                return;\n              }\n              const n = this.writeSync(fd, buf);\n              callback(null, n);\n            },\n            chmod(path, mode, callback) {\n              callback(enosys());\n            },\n            chown(path, uid, gid, callback) {\n              callback(enosys());\n            },\n            close(fd, callback) {\n              callback(enosys());\n            },\n            fchmod(fd, mode, callback) {\n              callback(enosys());\n            },\n            fchown(fd, uid, gid, callback) {\n              callback(enosys());\n            },\n            fstat(fd, callback) {\n              callback(enosys());\n            },\n            fsync(fd, callback) {\n              callback(null);\n            },\n            ftruncate(fd, length, callback) {\n              callback(enosys());\n            },\n            lchown(path, uid, gid, callback) {\n              callback(enosys());\n            },\n            link(path, link, callback) {\n              callback(enosys());\n            },\n            lstat(path, callback) {\n              callback(enosys());\n            },\n            mkdir(path, perm, callback) {\n              callback(enosys());\n            },\n            open(path, flags, mode, callback) {\n              callback(enosys());\n            },\n            read(fd, buffer, offset, length, position, callback) {\n              callback(enosys());\n            },\n            readdir(path, callback) {\n              callback(enosys());\n            },\n            readlink(path, callback) {\n              callback(enosys());\n            },\n            rename(from, to, callback) {\n              callback(enosys());\n            },\n            rmdir(path, callback) {\n              callback(enosys());\n            },\n            stat(path, callback) {\n              callback(enosys());\n            },\n            symlink(path, link, callback) {\n              callback(enosys());\n            },\n            truncate(path, length, callback) {\n              callback(enosys());\n            },\n            unlink(path, callback) {\n              callback(enosys());\n            },\n            utimes(path, atime, mtime, callback) {\n              callback(enosys());\n            }\n          };\n        }\n        if (!globalThis.process) {\n          globalThis.process = {\n            getuid() {\n              return -1;\n            },\n            getgid() {\n              return -1;\n            },\n            geteuid() {\n              return -1;\n            },\n            getegid() {\n              return -1;\n            },\n            getgroups() {\n              throw enosys();\n            },\n            pid: -1,\n            ppid: -1,\n            umask() {\n              throw enosys();\n            },\n            cwd() {\n              throw enosys();\n            },\n            chdir() {\n              throw enosys();\n            }\n          };\n        }\n        if (!globalThis.crypto) {\n          throw new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n        }\n        if (!globalThis.performance) {\n          throw new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n        }\n        if (!globalThis.TextEncoder) {\n          throw new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n        }\n        if (!globalThis.TextDecoder) {\n          throw new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n        }\n        const encoder = new TextEncoder(\"utf-8\");\n        const decoder = new TextDecoder(\"utf-8\");\n        globalThis.Go = class {\n          constructor() {\n            this.argv = [\"js\"];\n            this.env = {};\n            this.exit = (code) => {\n              if (code !== 0) {\n                console.warn(\"exit code:\", code);\n              }\n            };\n            this._exitPromise = new Promise((resolve) => {\n              this._resolveExitPromise = resolve;\n            });\n            this._pendingEvent = null;\n            this._scheduledTimeouts = /* @__PURE__ */ new Map();\n            this._nextCallbackTimeoutID = 1;\n            const setInt64 = (addr, v) => {\n              this.mem.setUint32(addr + 0, v, true);\n              this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n            };\n            const getInt64 = (addr) => {\n              const low = this.mem.getUint32(addr + 0, true);\n              const high = this.mem.getInt32(addr + 4, true);\n              return low + high * 4294967296;\n            };\n            const loadValue = (addr) => {\n              const f = this.mem.getFloat64(addr, true);\n              if (f === 0) {\n                return void 0;\n              }\n              if (!isNaN(f)) {\n                return f;\n              }\n              const id = this.mem.getUint32(addr, true);\n              return this._values[id];\n            };\n            const storeValue = (addr, v) => {\n              const nanHead = 2146959360;\n              if (typeof v === \"number\" && v !== 0) {\n                if (isNaN(v)) {\n                  this.mem.setUint32(addr + 4, nanHead, true);\n                  this.mem.setUint32(addr, 0, true);\n                  return;\n                }\n                this.mem.setFloat64(addr, v, true);\n                return;\n              }\n              if (v === void 0) {\n                this.mem.setFloat64(addr, 0, true);\n                return;\n              }\n              let id = this._ids.get(v);\n              if (id === void 0) {\n                id = this._idPool.pop();\n                if (id === void 0) {\n                  id = this._values.length;\n                }\n                this._values[id] = v;\n                this._goRefCounts[id] = 0;\n                this._ids.set(v, id);\n              }\n              this._goRefCounts[id]++;\n              let typeFlag = 0;\n              switch (typeof v) {\n                case \"object\":\n                  if (v !== null) {\n                    typeFlag = 1;\n                  }\n                  break;\n                case \"string\":\n                  typeFlag = 2;\n                  break;\n                case \"symbol\":\n                  typeFlag = 3;\n                  break;\n                case \"function\":\n                  typeFlag = 4;\n                  break;\n              }\n              this.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n              this.mem.setUint32(addr, id, true);\n            };\n            const loadSlice = (addr) => {\n              const array = getInt64(addr + 0);\n              const len = getInt64(addr + 8);\n              return new Uint8Array(this._inst.exports.mem.buffer, array, len);\n            };\n            const loadSliceOfValues = (addr) => {\n              const array = getInt64(addr + 0);\n              const len = getInt64(addr + 8);\n              const a = new Array(len);\n              for (let i = 0; i < len; i++) {\n                a[i] = loadValue(array + i * 8);\n              }\n              return a;\n            };\n            const loadString = (addr) => {\n              const saddr = getInt64(addr + 0);\n              const len = getInt64(addr + 8);\n              return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n            };\n            const timeOrigin = Date.now() - performance.now();\n            this.importObject = {\n              go: {\n                \"runtime.wasmExit\": (sp) => {\n                  sp >>>= 0;\n                  const code = this.mem.getInt32(sp + 8, true);\n                  this.exited = true;\n                  delete this._inst;\n                  delete this._values;\n                  delete this._goRefCounts;\n                  delete this._ids;\n                  delete this._idPool;\n                  this.exit(code);\n                },\n                \"runtime.wasmWrite\": (sp) => {\n                  sp >>>= 0;\n                  const fd = getInt64(sp + 8);\n                  const p = getInt64(sp + 16);\n                  const n = this.mem.getInt32(sp + 24, true);\n                  globalThis.fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n                },\n                \"runtime.resetMemoryDataView\": (sp) => {\n                  sp >>>= 0;\n                  this.mem = new DataView(this._inst.exports.mem.buffer);\n                },\n                \"runtime.nanotime1\": (sp) => {\n                  sp >>>= 0;\n                  setInt64(sp + 8, (timeOrigin + performance.now()) * 1e6);\n                },\n                \"runtime.walltime\": (sp) => {\n                  sp >>>= 0;\n                  const msec = new Date().getTime();\n                  setInt64(sp + 8, msec / 1e3);\n                  this.mem.setInt32(sp + 16, msec % 1e3 * 1e6, true);\n                },\n                \"runtime.scheduleTimeoutEvent\": (sp) => {\n                  sp >>>= 0;\n                  const id = this._nextCallbackTimeoutID;\n                  this._nextCallbackTimeoutID++;\n                  this._scheduledTimeouts.set(id, setTimeout(\n                    () => {\n                      this._resume();\n                      while (this._scheduledTimeouts.has(id)) {\n                        console.warn(\"scheduleTimeoutEvent: missed timeout event\");\n                        this._resume();\n                      }\n                    },\n                    getInt64(sp + 8) + 1\n                  ));\n                  this.mem.setInt32(sp + 16, id, true);\n                },\n                \"runtime.clearTimeoutEvent\": (sp) => {\n                  sp >>>= 0;\n                  const id = this.mem.getInt32(sp + 8, true);\n                  clearTimeout(this._scheduledTimeouts.get(id));\n                  this._scheduledTimeouts.delete(id);\n                },\n                \"runtime.getRandomData\": (sp) => {\n                  sp >>>= 0;\n                  crypto.getRandomValues(loadSlice(sp + 8));\n                },\n                \"syscall/js.finalizeRef\": (sp) => {\n                  sp >>>= 0;\n                  const id = this.mem.getUint32(sp + 8, true);\n                  this._goRefCounts[id]--;\n                  if (this._goRefCounts[id] === 0) {\n                    const v = this._values[id];\n                    this._values[id] = null;\n                    this._ids.delete(v);\n                    this._idPool.push(id);\n                  }\n                },\n                \"syscall/js.stringVal\": (sp) => {\n                  sp >>>= 0;\n                  storeValue(sp + 24, loadString(sp + 8));\n                },\n                \"syscall/js.valueGet\": (sp) => {\n                  sp >>>= 0;\n                  const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n                  sp = this._inst.exports.getsp() >>> 0;\n                  storeValue(sp + 32, result);\n                },\n                \"syscall/js.valueSet\": (sp) => {\n                  sp >>>= 0;\n                  Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n                },\n                \"syscall/js.valueDelete\": (sp) => {\n                  sp >>>= 0;\n                  Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n                },\n                \"syscall/js.valueIndex\": (sp) => {\n                  sp >>>= 0;\n                  storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n                },\n                \"syscall/js.valueSetIndex\": (sp) => {\n                  sp >>>= 0;\n                  Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n                },\n                \"syscall/js.valueCall\": (sp) => {\n                  sp >>>= 0;\n                  try {\n                    const v = loadValue(sp + 8);\n                    const m = Reflect.get(v, loadString(sp + 16));\n                    const args = loadSliceOfValues(sp + 32);\n                    const result = Reflect.apply(m, v, args);\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 56, result);\n                    this.mem.setUint8(sp + 64, 1);\n                  } catch (err) {\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 56, err);\n                    this.mem.setUint8(sp + 64, 0);\n                  }\n                },\n                \"syscall/js.valueInvoke\": (sp) => {\n                  sp >>>= 0;\n                  try {\n                    const v = loadValue(sp + 8);\n                    const args = loadSliceOfValues(sp + 16);\n                    const result = Reflect.apply(v, void 0, args);\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, result);\n                    this.mem.setUint8(sp + 48, 1);\n                  } catch (err) {\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, err);\n                    this.mem.setUint8(sp + 48, 0);\n                  }\n                },\n                \"syscall/js.valueNew\": (sp) => {\n                  sp >>>= 0;\n                  try {\n                    const v = loadValue(sp + 8);\n                    const args = loadSliceOfValues(sp + 16);\n                    const result = Reflect.construct(v, args);\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, result);\n                    this.mem.setUint8(sp + 48, 1);\n                  } catch (err) {\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, err);\n                    this.mem.setUint8(sp + 48, 0);\n                  }\n                },\n                \"syscall/js.valueLength\": (sp) => {\n                  sp >>>= 0;\n                  setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n                },\n                \"syscall/js.valuePrepareString\": (sp) => {\n                  sp >>>= 0;\n                  const str = encoder.encode(String(loadValue(sp + 8)));\n                  storeValue(sp + 16, str);\n                  setInt64(sp + 24, str.length);\n                },\n                \"syscall/js.valueLoadString\": (sp) => {\n                  sp >>>= 0;\n                  const str = loadValue(sp + 8);\n                  loadSlice(sp + 16).set(str);\n                },\n                \"syscall/js.valueInstanceOf\": (sp) => {\n                  sp >>>= 0;\n                  this.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16) ? 1 : 0);\n                },\n                \"syscall/js.copyBytesToGo\": (sp) => {\n                  sp >>>= 0;\n                  const dst = loadSlice(sp + 8);\n                  const src = loadValue(sp + 32);\n                  if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n                    this.mem.setUint8(sp + 48, 0);\n                    return;\n                  }\n                  const toCopy = src.subarray(0, dst.length);\n                  dst.set(toCopy);\n                  setInt64(sp + 40, toCopy.length);\n                  this.mem.setUint8(sp + 48, 1);\n                },\n                \"syscall/js.copyBytesToJS\": (sp) => {\n                  sp >>>= 0;\n                  const dst = loadValue(sp + 8);\n                  const src = loadSlice(sp + 16);\n                  if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n                    this.mem.setUint8(sp + 48, 0);\n                    return;\n                  }\n                  const toCopy = src.subarray(0, dst.length);\n                  dst.set(toCopy);\n                  setInt64(sp + 40, toCopy.length);\n                  this.mem.setUint8(sp + 48, 1);\n                },\n                \"debug\": (value) => {\n                  console.log(value);\n                }\n              }\n            };\n          }\n          run(instance) {\n            return __async(this, null, function* () {\n              if (!(instance instanceof WebAssembly.Instance)) {\n                throw new Error(\"Go.run: WebAssembly.Instance expected\");\n              }\n              this._inst = instance;\n              this.mem = new DataView(this._inst.exports.mem.buffer);\n              this._values = [\n                NaN,\n                0,\n                null,\n                true,\n                false,\n                globalThis,\n                this\n              ];\n              this._goRefCounts = new Array(this._values.length).fill(Infinity);\n              this._ids = /* @__PURE__ */ new Map([\n                [0, 1],\n                [null, 2],\n                [true, 3],\n                [false, 4],\n                [globalThis, 5],\n                [this, 6]\n              ]);\n              this._idPool = [];\n              this.exited = false;\n              let offset = 4096;\n              const strPtr = (str) => {\n                const ptr = offset;\n                const bytes = encoder.encode(str + \"\\0\");\n                new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n                offset += bytes.length;\n                if (offset % 8 !== 0) {\n                  offset += 8 - offset % 8;\n                }\n                return ptr;\n              };\n              const argc = this.argv.length;\n              const argvPtrs = [];\n              this.argv.forEach((arg) => {\n                argvPtrs.push(strPtr(arg));\n              });\n              argvPtrs.push(0);\n              const keys = Object.keys(this.env).sort();\n              keys.forEach((key) => {\n                argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n              });\n              argvPtrs.push(0);\n              const argv = offset;\n              argvPtrs.forEach((ptr) => {\n                this.mem.setUint32(offset, ptr, true);\n                this.mem.setUint32(offset + 4, 0, true);\n                offset += 8;\n              });\n              const wasmMinDataAddr = 4096 + 8192;\n              if (offset >= wasmMinDataAddr) {\n                throw new Error(\"total length of command line and environment variables exceeds limit\");\n              }\n              this._inst.exports.run(argc, argv);\n              if (this.exited) {\n                this._resolveExitPromise();\n              }\n              yield this._exitPromise;\n            });\n          }\n          _resume() {\n            if (this.exited) {\n              throw new Error(\"Go program has already exited\");\n            }\n            this._inst.exports.resume();\n            if (this.exited) {\n              this._resolveExitPromise();\n            }\n          }\n          _makeFuncWrapper(id) {\n            const go = this;\n            return function() {\n              const event = { id, this: this, args: arguments };\n              go._pendingEvent = event;\n              go._resume();\n              return event.result;\n            };\n          }\n        };\n      })();\n      onmessage = ({ data: wasm }) => {\n        let decoder = new TextDecoder();\n        let fs = globalThis.fs;\n        let stderr = \"\";\n        fs.writeSync = (fd, buffer) => {\n          if (fd === 1) {\n            postMessage(buffer);\n          } else if (fd === 2) {\n            stderr += decoder.decode(buffer);\n            let parts = stderr.split(\"\\n\");\n            if (parts.length > 1)\n              console.log(parts.slice(0, -1).join(\"\\n\"));\n            stderr = parts[parts.length - 1];\n          } else {\n            throw new Error(\"Bad write\");\n          }\n          return buffer.length;\n        };\n        let stdin = [];\n        let resumeStdin;\n        let stdinPos = 0;\n        onmessage = ({ data }) => {\n          if (data.length > 0) {\n            stdin.push(data);\n            if (resumeStdin)\n              resumeStdin();\n          }\n        };\n        fs.read = (fd, buffer, offset, length, position, callback) => {\n          if (fd !== 0 || offset !== 0 || length !== buffer.length || position !== null) {\n            throw new Error(\"Bad read\");\n          }\n          if (stdin.length === 0) {\n            resumeStdin = () => fs.read(fd, buffer, offset, length, position, callback);\n            return;\n          }\n          let first = stdin[0];\n          let count = Math.max(0, Math.min(length, first.length - stdinPos));\n          buffer.set(first.subarray(stdinPos, stdinPos + count), offset);\n          stdinPos += count;\n          if (stdinPos === first.length) {\n            stdin.shift();\n            stdinPos = 0;\n          }\n          callback(null, count);\n        };\n        let go = new globalThis.Go();\n        go.argv = [\"\", `--service=${\"0.16.10\"}`];\n        tryToInstantiateModule(wasm, go).then(\n          (instance) => {\n            postMessage(null);\n            go.run(instance);\n          },\n          (error) => {\n            postMessage(error);\n          }\n        );\n      };\n      function tryToInstantiateModule(wasm, go) {\n        return __async(this, null, function* () {\n          if (wasm instanceof WebAssembly.Module) {\n            return WebAssembly.instantiate(wasm, go.importObject);\n          }\n          const res = yield fetch(wasm);\n          if (!res.ok)\n            throw new Error(`Failed to download ${JSON.stringify(wasm)}`);\n          if (\"instantiateStreaming\" in WebAssembly && /^application\\/wasm($|;)/i.test(res.headers.get(\"Content-Type\") || \"\")) {\n            const result2 = yield WebAssembly.instantiateStreaming(res, go.importObject);\n            return result2.instance;\n          }\n          const bytes = yield res.arrayBuffer();\n          const result = yield WebAssembly.instantiate(bytes, go.importObject);\n          return result.instance;\n        });\n      }\n      return (m) => onmessage(m);\n    })((data) => worker.onmessage({ data }));\n    worker = {\n      onmessage: null,\n      postMessage: (data) => setTimeout(() => onmessage({ data })),\n      terminate() {\n      }\n    };\n  }\n  let firstMessageResolve;\n  let firstMessageReject;\n  const firstMessagePromise = new Promise((resolve, reject) => {\n    firstMessageResolve = resolve;\n    firstMessageReject = reject;\n  });\n  worker.onmessage = ({ data: error }) => {\n    worker.onmessage = ({ data }) => readFromStdout(data);\n    if (error)\n      firstMessageReject(error);\n    else\n      firstMessageResolve();\n  };\n  worker.postMessage(wasmModule || new URL(wasmURL, location.href).toString());\n  let { readFromStdout, service } = createChannel({\n    writeToStdin(bytes) {\n      worker.postMessage(bytes);\n    },\n    isSync: false,\n    isWriteUnavailable: true,\n    esbuild: browser_exports\n  });\n  yield firstMessagePromise;\n  longLivedService = {\n    build: (options) => new Promise((resolve, reject) => service.buildOrServe({\n      callName: \"build\",\n      refs: null,\n      serveOptions: null,\n      options,\n      isTTY: false,\n      defaultWD: \"/\",\n      callback: (err, res) => err ? reject(err) : resolve(res)\n    })),\n    transform: (input, options) => new Promise((resolve, reject) => service.transform({\n      callName: \"transform\",\n      refs: null,\n      input,\n      options: options || {},\n      isTTY: false,\n      fs: {\n        readFile(_, callback) {\n          callback(new Error(\"Internal error\"), null);\n        },\n        writeFile(_, callback) {\n          callback(null);\n        }\n      },\n      callback: (err, res) => err ? reject(err) : resolve(res)\n    })),\n    formatMessages: (messages, options) => new Promise((resolve, reject) => service.formatMessages({\n      callName: \"formatMessages\",\n      refs: null,\n      messages,\n      options,\n      callback: (err, res) => err ? reject(err) : resolve(res)\n    })),\n    analyzeMetafile: (metafile, options) => new Promise((resolve, reject) => service.analyzeMetafile({\n      callName: \"analyzeMetafile\",\n      refs: null,\n      metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n      options,\n      callback: (err, res) => err ? reject(err) : resolve(res)\n    }))\n  };\n});\nvar browser_default = browser_exports;\n})(typeof module===\"object\"?module:{set exports(x){(typeof self!==\"undefined\"?self:this).esbuild=x}});\n"],"names":["module","__defProp","__getOwnPropDesc","__getOwnPropNames","__hasOwnProp","__export","target","all","name","__copyProps","to","from","except","desc","key","__toCommonJS","mod","__async","__this","__arguments","generator","resolve","reject","fulfilled","value","step","e","rejected","x","browser_exports","analyzeMetafile","analyzeMetafileSync","build","buildSync","browser_default","formatMessages","formatMessagesSync","initialize","serve","transform","transformSync","version","encodePacket","packet","visit","bb","encodeUTF8","item","keys","ByteBuffer","writeUInt32LE","decodePacket","bytes","decodeUTF8","count","value2","i","id","isRequest","buf","delta","clone","offset","readUInt32LE","length","ptr","encodeInvariant","encoder","decoder","text","buffer","byteOffset","byteLength","quote","buildLogLevelDefault","transformLogLevelDefault","validateTarget","validateStringValue","canBeAnything","mustBeBoolean","mustBeBooleanOrObject","mustBeString","mustBeRegExp","mustBeInteger","mustBeFunction","mustBeArray","mustBeObject","mustBeWebAssemblyModule","mustBeArrayOrRecord","mustBeObjectOrNull","mustBeStringOrBoolean","mustBeStringOrObject","mustBeStringOrArray","mustBeStringOrUint8Array","mustBeStringOrURL","getFlag","object","mustBeFn","mustBe","checkForInvalidFlags","where","validateInitializeOptions","options","wasmURL","wasmModule","worker","validateMangleCache","mangleCache","validated","pushLogFlags","flags","isTTY","logLevelDefault","color","logLevel","logLimit","what","pushCommonFlags","legalComments","sourceRoot","sourcesContent","format","globalName","mangleProps","reserveProps","mangleQuoted","minify","minifySyntax","minifyWhitespace","minifyIdentifiers","drop","charset","treeShaking","ignoreAnnotations","jsx","jsxFactory","jsxFragment","jsxImportSource","jsxDev","jsxSideEffects","define","logOverride","supported","pure","keepNames","platform","fn","flagsForBuildOptions","callName","writeDefault","_a","entries","stdinContents","stdinResolveDir","watchMode","sourcemap","bundle","watch","splitting","preserveSymlinks","metafile","outfile","outdir","outbase","tsconfig","resolveExtensions","nodePathsInput","mainFields","conditions","external","packages","alias","loader","outExtension","publicPath","entryNames","chunkNames","assetNames","inject","banner","footer","entryPoints","absWorkingDir","stdin","write","allowOverwrite","incremental","watchKeys","onRebuild","values","old","type","path","ext","entryPoint","stdinKeys","contents","resolveDir","sourcefile","loader2","nodePaths","flagsForTransformOptions","tsconfigRaw","createChannel","streamIn","requestCallbacksByKey","closeData","responseCallbacks","nextRequestID","nextBuildKey","stdout","stdoutUsed","readFromStdout","chunk","limit","swap","handleIncomingPacket","afterClose","error","sendRequest","refs","callback","response","sendResponse","handleRequest","request","requestCallbacks","extractErrorMessageV8","isFirstPacket","binaryVersion","serveOptions","defaultWD","refCount","buildKey","buildRefs","buildOrServeImpl","err","res","input","fs","details","createObjectStash","start","inputPath","errors","replaceDetailsInMessages","warnings","outstanding","next","result","failureErrorWithLog","messages","sanitizeMessages","kind","terminalWidth","verbose","logPluginError","pluginName","note","done","message","handleError","plugins","handlePlugins","buildOrServeContinue","logPluginError2","requestPlugins","runOnEndCallbacks","serve2","buildServeData","rebuild","stop","copyResponseToResult","convertOutputFiles","buildResponseToResult","callback2","isDisposed","error2","response2","error3","result3","isStopped","request2","watchResponse","result2","serveResponse","port","host","servedir","onRequest","wait","initialOptions","onStartCallbacks","onEndCallbacks","onResolveCallbacks","onLoadCallbacks","nextCallbackID","isSetupDone","setup","plugin","promise","keys2","importer","namespace","pluginData","resolve2","registeredText","registeredNote","extractCallerV8","filter","_0","id2","suffix","sideEffects","watchFiles","watchDirs","sanitizeStringArray","map","nextID","ident","tried","lines","location2","parseStackLinesV8","stash","at","line","match","lineText","column","summary","file","pluginText","sanitizeLocation","suggestion","property","fallbackPluginName","messagesClone","index","notes","detail","notesClone","noteKeys","noteText","noteLocation","binary","ensureServiceIsRunning","initializePromise","longLivedService","useWorker","startRunningService","blob","onmessage","postMessage","globalThis","o","k","enosys","outputBuf","fd","nl","position","n","mode","uid","gid","link","perm","atime","mtime","code","setInt64","addr","v","getInt64","low","high","loadValue","f","storeValue","typeFlag","loadSlice","array","len","loadSliceOfValues","a","loadString","saddr","timeOrigin","sp","msec","m","args","str","dst","src","toCopy","instance","strPtr","argc","argvPtrs","arg","argv","wasmMinDataAddr","go","event","wasm","stderr","parts","resumeStdin","stdinPos","data","first","tryToInstantiateModule","firstMessageResolve","firstMessageReject","firstMessagePromise","service","_"],"mappings":"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"}