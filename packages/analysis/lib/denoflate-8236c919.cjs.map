{"version":3,"file":"denoflate-8236c919.cjs","sources":["../../core/src/deno/denoflate/pkg/denoflate.js"],"sourcesContent":["let wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function deflate(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.deflate(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function inflate(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.inflate(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function gzip(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.gzip(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function gunzip(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.gunzip(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function zlib(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.zlib(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function unzlib(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.unzlib(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        // input = new URL('denoflate_bg.wasm', import.meta.url);\n        input = new URL('denoflate_bg.wasm');\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;"],"names":[],"mappings":"gFAAA,GAAI,GAEA,EAAoB,GAAI,aAAY,QAAS,CAAE,UAAW,GAAM,MAAO,EAAI,CAAE,EAEjF,EAAkB,OAAM,EAExB,GAAI,GAAuB,KAC3B,YAA2B,CACvB,MAAI,KAAyB,MAAQ,EAAqB,SAAW,EAAK,OAAO,SAC7E,GAAuB,GAAI,YAAW,EAAK,OAAO,MAAM,GAErD,CACX,CAEA,WAA4B,EAAK,EAAK,CAClC,MAAO,GAAkB,OAAO,EAAiB,EAAC,SAAS,EAAK,EAAM,CAAG,CAAC,CAC9E,CAEA,KAAM,GAAO,GAAI,OAAM,EAAE,EAAE,KAAK,MAAS,EAEzC,EAAK,KAAK,OAAW,KAAM,GAAM,EAAK,EAEtC,GAAI,GAAY,EAAK,OAErB,WAAuB,EAAK,CACxB,AAAI,IAAc,EAAK,QAAQ,EAAK,KAAK,EAAK,OAAS,CAAC,EACxD,KAAM,GAAM,EACZ,SAAY,EAAK,GAEjB,EAAK,GAAO,EACL,CACX,CAEA,WAAmB,EAAK,CAAE,MAAO,GAAK,EAAO,CAE7C,WAAoB,EAAK,CACrB,AAAI,EAAM,IACV,GAAK,GAAO,EACZ,EAAY,EAChB,CAEA,WAAoB,EAAK,CACrB,KAAM,GAAM,EAAU,CAAG,EACzB,SAAW,CAAG,EACP,CACX,CAEA,GAAI,GAAkB,EAEtB,WAA2B,EAAK,EAAQ,CACpC,KAAM,GAAM,EAAO,EAAI,OAAS,CAAC,EACjC,SAAiB,EAAC,IAAI,EAAK,EAAM,CAAC,EAClC,EAAkB,EAAI,OACf,CACX,CAEA,WAAoB,EAAG,CACnB,MAAO,AAAmB,IAAM,IACpC,CAEA,GAAI,GAAuB,KAC3B,YAA2B,CACvB,MAAI,KAAyB,MAAQ,EAAqB,SAAW,EAAK,OAAO,SAC7E,GAAuB,GAAI,YAAW,EAAK,OAAO,MAAM,GAErD,CACX,CAEA,WAA6B,EAAK,EAAK,CACnC,MAAO,GAAe,EAAG,SAAS,EAAM,EAAG,EAAM,EAAI,CAAG,CAC5D,CAMO,WAAiB,EAAO,EAAa,CACxC,GAAI,CACA,KAAM,GAAS,EAAK,gCAAgC,GAAG,EACvD,GAAI,GAAO,EAAkB,EAAO,EAAK,iBAAiB,EACtD,EAAO,EACX,EAAK,QAAQ,EAAQ,EAAM,EAAM,CAAC,EAAW,CAAW,EAAG,EAAW,CAAW,EAAI,EAAI,CAAW,EACpG,GAAI,GAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,CAAE,EAAE,MAAK,EAC1C,SAAK,gBAAgB,EAAI,EAAK,CAAC,EACxB,CACf,QAAc,CACN,EAAK,gCAAgC,EAAE,CAC1C,CACL,CAMO,WAAiB,EAAO,CAC3B,GAAI,CACA,KAAM,GAAS,EAAK,gCAAgC,GAAG,EACvD,GAAI,GAAO,EAAkB,EAAO,EAAK,iBAAiB,EACtD,EAAO,EACX,EAAK,QAAQ,EAAQ,EAAM,CAAI,EAC/B,GAAI,GAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,CAAE,EAAE,MAAK,EAC1C,SAAK,gBAAgB,EAAI,EAAK,CAAC,EACxB,CACf,QAAc,CACN,EAAK,gCAAgC,EAAE,CAC1C,CACL,CAOO,WAAc,EAAO,EAAa,CACrC,GAAI,CACA,KAAM,GAAS,EAAK,gCAAgC,GAAG,EACvD,GAAI,GAAO,EAAkB,EAAO,EAAK,iBAAiB,EACtD,EAAO,EACX,EAAK,KAAK,EAAQ,EAAM,EAAM,CAAC,EAAW,CAAW,EAAG,EAAW,CAAW,EAAI,EAAI,CAAW,EACjG,GAAI,GAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,CAAE,EAAE,MAAK,EAC1C,SAAK,gBAAgB,EAAI,EAAK,CAAC,EACxB,CACf,QAAc,CACN,EAAK,gCAAgC,EAAE,CAC1C,CACL,CAMO,WAAgB,EAAO,CAC1B,GAAI,CACA,KAAM,GAAS,EAAK,gCAAgC,GAAG,EACvD,GAAI,GAAO,EAAkB,EAAO,EAAK,iBAAiB,EACtD,EAAO,EACX,EAAK,OAAO,EAAQ,EAAM,CAAI,EAC9B,GAAI,GAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,CAAE,EAAE,MAAK,EAC1C,SAAK,gBAAgB,EAAI,EAAK,CAAC,EACxB,CACf,QAAc,CACN,EAAK,gCAAgC,EAAE,CAC1C,CACL,CAOO,WAAc,EAAO,EAAa,CACrC,GAAI,CACA,KAAM,GAAS,EAAK,gCAAgC,GAAG,EACvD,GAAI,GAAO,EAAkB,EAAO,EAAK,iBAAiB,EACtD,EAAO,EACX,EAAK,KAAK,EAAQ,EAAM,EAAM,CAAC,EAAW,CAAW,EAAG,EAAW,CAAW,EAAI,EAAI,CAAW,EACjG,GAAI,GAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,CAAE,EAAE,MAAK,EAC1C,SAAK,gBAAgB,EAAI,EAAK,CAAC,EACxB,CACf,QAAc,CACN,EAAK,gCAAgC,EAAE,CAC1C,CACL,CAMO,WAAgB,EAAO,CAC1B,GAAI,CACA,KAAM,GAAS,EAAK,gCAAgC,GAAG,EACvD,GAAI,GAAO,EAAkB,EAAO,EAAK,iBAAiB,EACtD,EAAO,EACX,EAAK,OAAO,EAAQ,EAAM,CAAI,EAC9B,GAAI,GAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAiB,EAAC,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,CAAE,EAAE,MAAK,EAC1C,SAAK,gBAAgB,EAAI,EAAK,CAAC,EACxB,CACf,QAAc,CACN,EAAK,gCAAgC,EAAE,CAC1C,CACL,CAEA,iBAAoB,EAAQ,EAAS,CACjC,GAAI,MAAO,WAAa,YAAc,YAAkB,UAAU,CAC9D,GAAI,MAAO,aAAY,sBAAyB,WAC5C,GAAI,CACA,MAAO,MAAM,aAAY,qBAAqB,EAAQ,CAAO,CAEhE,OAAQ,EAAP,CACE,GAAI,EAAO,QAAQ,IAAI,cAAc,GAAK,mBACtC,QAAQ,KAAK,oMAAqM,CAAC,MAGnN,MAAM,EAEb,CAGL,KAAM,GAAQ,KAAM,GAAO,cAC3B,MAAO,MAAM,aAAY,YAAY,EAAO,CAAO,CAE3D,KAAW,CACH,KAAM,GAAW,KAAM,aAAY,YAAY,EAAQ,CAAO,EAE9D,MAAI,aAAoB,aAAY,SACzB,CAAE,WAAU,UAGZ,CAEd,CACL,CAEA,iBAAoB,EAAO,CACvB,AAAI,MAAO,GAAU,KAEjB,GAAQ,GAAI,KAAI,mBAAmB,GAEvC,KAAM,GAAU,CAAA,EAChB,EAAQ,IAAM,GACd,EAAQ,IAAI,sBAAwB,SAAS,EAAM,EAAM,CACrD,GAAI,GAAM,EAAmB,EAAM,CAAI,EACvC,MAAO,GAAc,CAAG,CAChC,EACI,EAAQ,IAAI,mBAAqB,SAAS,EAAM,CAC5C,KAAM,GAAW,CAAI,CAC7B,EAEQ,OAAO,IAAU,UAAa,MAAO,UAAY,YAAc,YAAiB,UAAa,MAAO,MAAQ,YAAc,YAAiB,OAC3I,GAAQ,MAAM,CAAK,GAKvB,KAAM,CAAE,WAAU,UAAW,KAAM,GAAK,KAAM,GAAO,CAAO,EAE5D,SAAO,EAAS,QAChB,EAAK,uBAAyB,EAEvB,CACX"}