{"version":3,"file":"mod-b70e2c33.mjs","sources":["../../core/src/deno/lz4/mod.ts"],"sourcesContent":["// https://deno.land/x/lz4@v0.1.2/mod.ts\n// Copyright 2020-present the denosaurs team. All rights reserved. MIT license.\n\n// import init, {\n//     source,\n//     lz4_compress,\n//     lz4_decompress,\n// } from \"./wasm\";\n\nlet initialized = false;\nlet initWASM: typeof import(\"./wasm\");\nexport const getWASM = async () => {\n    if (initWASM) return initWASM;\n\n    const wasm = await import(\"./wasm\");\n    const { default: init, source } = wasm;\n    \n    if (!initialized) await init(await source());\n    return (initWASM = wasm);\n}\n\n/**\n * Compress a byte array using lz4.\n *\n * ```typescript\n * import { compress } from \"https://deno.land/x/lz4/mod.ts\";\n * const text = new TextEncoder().encode(\"X\".repeat(64));\n * console.log(text.length);                   // 64 Bytes\n * console.log(compress(text).length);         // 6  Bytes\n * ```\n *\n * @param input Input data.\n */\nexport async function compress(input: Uint8Array): Promise<Uint8Array> {\n    const { lz4_compress } = await getWASM();\n    return lz4_compress(input);\n}\n\n/**\n * Decompress a byte array using lz4.\n *\n * ```typescript\n * import { decompress } from \"https://deno.land/x/lz4/mod.ts\";\n * const compressed = Uint8Array.from([ 31, 88, 1, 0, 44, 0 ]);\n * console.log(compressed.length);             // 6 Bytes\n * console.log(decompress(compressed).length); // 64 Bytes\n * ```\n *\n * @param input Input data.\n */\nexport async function decompress(input: Uint8Array): Promise<Uint8Array> {\n    const { lz4_decompress } = await getWASM();\n    return lz4_decompress(input);\n}"],"names":["initWASM","getWASM","wasm","init","source","compress","input","lz4_compress","decompress","lz4_decompress"],"mappings":"AAUA,IAAIA;AACG,MAAMC,IAAU,YAAY;AAC3B,MAAAD;AAAiB,WAAAA;AAEf,QAAAE,IAAO,MAAM,OAAO,wBACpB,EAAE,SAASC,GAAM,QAAAC,EAAA,IAAWF;AAEV,eAAAC,EAAK,MAAMC,EAAA,CAAQ,GACnCJ,IAAWE;AACvB;AAcA,eAAsBG,EAASC,GAAwC;AACnE,QAAM,EAAE,cAAAC,EAAA,IAAiB,MAAMN;AAC/B,SAAOM,EAAaD,CAAK;AAC7B;AAcA,eAAsBE,EAAWF,GAAwC;AACrE,QAAM,EAAE,gBAAAG,EAAA,IAAmB,MAAMR;AACjC,SAAOQ,EAAeH,CAAK;AAC/B;"}