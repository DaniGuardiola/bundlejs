{"version":3,"file":"mod-f893b063.cjs","sources":["../../core/src/deno/denoflate/mod.ts"],"sourcesContent":["// https://deno.land/x/denoflate@1.2.1/mod.ts\n// export {\n//   deflate,\n//   inflate,\n//   gzip,\n//   gunzip,\n//   zlib,\n//   unzlib\n// } from \"./pkg/denoflate.js\";\n\nimport type { InitOutput } from \"./pkg/denoflate\";\n// import init from \"./pkg/denoflate.js\"; \n\n// @ts-ignore\n// import { wasm as WASM } from \"./pkg/denoflate_bg.wasm.js\";\n// import { source } from \"./pkg/wasm.ts\";\n\nlet wasm: InitOutput;\nlet initWASM: typeof import(\"./pkg/denoflate.js\");\nexport const getWASM = async (src?: Uint8Array) => {\n  if (initWASM) return initWASM;\n\n  const _exports = await import(\"./pkg/denoflate.js\");\n  const { default: init } = _exports;\n\n  const { wasm: WASM } = (await import(\"./pkg/denoflate_bg.wasm.js\")) as unknown as { wasm: () => Promise<Uint8Array> };\n  (wasm = await init(src ?? await WASM()));\n\n  return (initWASM = _exports);\n}\n\nexport async function deflate(input: Uint8Array, compression?: number) {\n  return (await getWASM()).deflate(input, compression);\n}\n\nexport async function inflate(input: Uint8Array) {\n  return (await getWASM()).inflate(input);\n}\n\nexport async function gzip(input: Uint8Array, compression?: number) {\n  return (await getWASM()).gzip(input, compression);\n}\n\nexport async function gunzip(input: Uint8Array) {\n  return (await getWASM()).gunzip(input);\n}\n\nexport async function zlib(input: Uint8Array, compression?: number) {\n  return (await getWASM()).zlib(input, compression);\n}\n\nexport async function unzlib(input: Uint8Array) {\n  return (await getWASM()).unzlib(input);\n}\n\nexport default wasm;\n"],"names":["wasm","initWASM","getWASM","src","_exports","init","WASM","deflate","input","compression","inflate","gzip","gunzip","zlib","unzlib","wasm$1"],"mappings":"gFAiBA,IAAIA,EACAC,EACS,MAAAC,EAAU,MAAOC,GAAqB,CAC7C,GAAAF,EAAiB,OAAAA,EAEf,MAAAG,EAAW,MAAM,QAAO,QAAA,EAAA,KAAA,IAAA,QAAA,0BAAA,GACxB,CAAE,QAASC,CAAS,EAAAD,EAEpB,CAAE,KAAME,CAAK,EAAK,MAAM,QAAA,QAAA,EAAA,KAAA,IAAA,QAAO,kCAAA,CAAA,EACpC,OAAAN,EAAO,MAAMK,EAAKF,GAAO,MAAMG,EAAM,CAAA,EAE9BL,EAAWG,CACrB,EAEsB,eAAAG,EAAQC,EAAmBC,EAAsB,CACrE,OAAQ,MAAMP,EAAW,GAAA,QAAQM,EAAOC,CAAW,CACrD,CAEA,eAAsBC,EAAQF,EAAmB,CAC/C,OAAQ,MAAMN,EAAA,GAAW,QAAQM,CAAK,CACxC,CAEsB,eAAAG,EAAKH,EAAmBC,EAAsB,CAClE,OAAQ,MAAMP,EAAW,GAAA,KAAKM,EAAOC,CAAW,CAClD,CAEA,eAAsBG,EAAOJ,EAAmB,CAC9C,OAAQ,MAAMN,EAAA,GAAW,OAAOM,CAAK,CACvC,CAEsB,eAAAK,EAAKL,EAAmBC,EAAsB,CAClE,OAAQ,MAAMP,EAAW,GAAA,KAAKM,EAAOC,CAAW,CAClD,CAEA,eAAsBK,EAAON,EAAmB,CAC9C,OAAQ,MAAMN,EAAA,GAAW,OAAOM,CAAK,CACvC,CAEA,MAAAO,EAAef"}