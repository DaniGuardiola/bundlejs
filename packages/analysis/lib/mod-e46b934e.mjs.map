{"version":3,"file":"mod-e46b934e.mjs","sources":["../../core/src/deno/denoflate/mod.ts"],"sourcesContent":["// https://deno.land/x/denoflate@1.2.1/mod.ts\n// export {\n//   deflate,\n//   inflate,\n//   gzip,\n//   gunzip,\n//   zlib,\n//   unzlib\n// } from \"./pkg/denoflate.js\";\n\nimport type { InitOutput } from \"./pkg/denoflate\";\n// import init from \"./pkg/denoflate.js\"; \n\n// @ts-ignore\n// import { wasm as WASM } from \"./pkg/denoflate_bg.wasm.js\";\n// import { source } from \"./pkg/wasm.ts\";\n\nlet wasm: InitOutput;\nlet initWASM: typeof import(\"./pkg/denoflate.js\");\nexport const getWASM = async (src?: Uint8Array) => {\n  if (initWASM) return initWASM;\n\n  const _exports = await import(\"./pkg/denoflate.js\");\n  const { default: init } = _exports;\n\n  const { wasm: WASM } = (await import(\"./pkg/denoflate_bg.wasm.js\")) as unknown as { wasm: () => Promise<Uint8Array> };\n  (wasm = await init(src ?? await WASM()));\n\n  return (initWASM = _exports);\n}\n\nexport async function deflate(input: Uint8Array, compression?: number) {\n  return (await getWASM()).deflate(input, compression);\n}\n\nexport async function inflate(input: Uint8Array) {\n  return (await getWASM()).inflate(input);\n}\n\nexport async function gzip(input: Uint8Array, compression?: number) {\n  return (await getWASM()).gzip(input, compression);\n}\n\nexport async function gunzip(input: Uint8Array) {\n  return (await getWASM()).gunzip(input);\n}\n\nexport async function zlib(input: Uint8Array, compression?: number) {\n  return (await getWASM()).zlib(input, compression);\n}\n\nexport async function unzlib(input: Uint8Array) {\n  return (await getWASM()).unzlib(input);\n}\n\nexport default wasm;\n"],"names":[],"mappings":"AAiBA,IAAI;AACJ,IAAI;AACS,MAAA,UAAU,OAAO,QAAqB;AAC7C,MAAA;AAAiB,WAAA;AAEf,QAAA,WAAW,MAAM,OAAO;AACxB,QAAA,EAAE,SAAS,SAAS;AAE1B,QAAM,EAAE,MAAM,SAAU,MAAM,OAAO;AACpC,SAAO,MAAM,KAAK,OAAO,MAAM,KAAM,CAAA;AAEtC,SAAQ,WAAW;AACrB;AAEA,uBAA8B,OAAmB,aAAsB;AACrE,SAAc,OAAA,QAAW,GAAA,QAAQ,OAAO,WAAW;AACrD;AAEA,uBAA8B,OAAmB;AAC/C,SAAc,OAAA,QAAA,GAAW,QAAQ,KAAK;AACxC;AAEA,oBAA2B,OAAmB,aAAsB;AAClE,SAAc,OAAA,QAAW,GAAA,KAAK,OAAO,WAAW;AAClD;AAEA,sBAA6B,OAAmB;AAC9C,SAAc,OAAA,QAAA,GAAW,OAAO,KAAK;AACvC;AAEA,oBAA2B,OAAmB,aAAsB;AAClE,SAAc,OAAA,QAAW,GAAA,KAAK,OAAO,WAAW;AAClD;AAEA,sBAA6B,OAAmB;AAC9C,SAAc,OAAA,QAAA,GAAW,OAAO,KAAK;AACvC;AAEA,IAAA,SAAe;;"}