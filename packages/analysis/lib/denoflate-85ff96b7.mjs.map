{"version":3,"file":"denoflate-85ff96b7.mjs","sources":["../../core/src/deno/denoflate/pkg/denoflate.js"],"sourcesContent":["let wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function deflate(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.deflate(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function inflate(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.inflate(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function gzip(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.gzip(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function gunzip(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.gunzip(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @param {number | undefined} compression\n* @returns {Uint8Array}\n*/\nexport function zlib(input, compression) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.zlib(retptr, ptr0, len0, !isLikeNone(compression), isLikeNone(compression) ? 0 : compression);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} input\n* @returns {Uint8Array}\n*/\nexport function unzlib(input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(input, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.unzlib(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        // input = new URL('denoflate_bg.wasm', import.meta.url);\n        input = new URL('denoflate_bg.wasm');\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;"],"names":["wasm","cachedTextDecoder","cachegetUint8Memory0","getUint8Memory0","getStringFromWasm0","ptr","len","heap","heap_next","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","isLikeNone","x","cachegetInt32Memory0","getInt32Memory0","getArrayU8FromWasm0","deflate","input","compression","retptr","ptr0","len0","r0","r1","v1","inflate","gzip","gunzip","zlib","unzlib","load","module","imports","e","bytes","instance","init","arg0","arg1"],"mappings":"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"}