extends /layouts/layout.pug

block preload
  link(rel="stylesheet", href="./js/monaco.min.css")

block content
  .container
    header
      h1 bundle
      p 
        | a quick npm package size checker 
        strong#visit-counter 


    .search-container
      .search
        i.icon search
        input#search-input(type="text" autocomplete="off" placeholder="Type a package name...")
        button.btn.clear
          i.icon clear

      .search-results-container

    .push-to-side
      #bundle-time
      .flex.flex-1
      button.btn#run(type='button') Run
      .file-size Wait...
    #app
      .center-container
        .loading
      #editor
      
    +product-hunt.place-content-center
        
    p * Check the console for error messages and bundled code.
    p * Every 10 results the console will be cleared.
    br
    p * Note: Treeshaking is available, but since esbuild and rollup doesn't have access to each packages package.json, it assumes that there are sideEffects.
    br

    p You can use custom protocols to specify which CDN the module should come from.
    br
    p
      | * esm.run:react   ->   #[a(href="https://esm.run/react" target="_blank" rel="noopener") https://esm.run/react] 
      br
      | * esm.sh:react    ->   #[a(href="https://cdn.esm.sh/react" target="_blank" rel="noopener") https://cdn.esm.sh/react] 
      br
      | * esm:react       ->   #[a(href="https://cdn.esm.sh/react" target="_blank" rel="noopener") https://cdn.esm.sh/react] 
      br
      | * skypack:react   ->   #[a(href="https://cdn.skypack.dev/react" target="_blank" rel="noopener") https://cdn.skypack.dev/react] 
      br
      | * unpkg:react     ->   #[a(href="https://unpkg.com/react" target="_blank" rel="noopener") https://unpkg.com/react] 
      br
      | * jsdelivr:react  ->   #[a(href="https://cdn.jsdelivr.net/npm/react" target="_blank" rel="noopener") https://cdn.jsdelivr.net/npm/react] 
    br
    p e.g.
    :markdown-it(linkify langPrefix='language-')
      ```typescript
      import { toStr } from "skypack:@okikio/animate";
      // or
      export * from "esm:@okikio/animate"; 
      ```
    br
    p.relative
      span="* If an error occurs try using a different CDN, by default "
      strong bundle
      |  uses
      a(href="https://cdn.skypack.dev" target="_blank" rel="noopener")  cdn.skypack.dev
      |  but you can use the others.
        

block script  

  script(src="./js/load-webanimation-polyfill.min.js" type='module' async)
  script(src='./js/index.min.js' type='module' async)

  //- link(rel='modulepreload' href='./js/esbuild.worker.js')
  //- link(rel="prefetch" href="./js/esbuild.worker.js")
  