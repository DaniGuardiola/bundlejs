extends /layouts/layout.pug

block content
  link(rel="stylesheet", href="/js/index.min.css" importance="low")
  input(type="text" id="copy-input" tabindex="-1" aria-hidden="true")

  .container
    header
      h1 bundle
      p 
        | a quick npm package size checker 

    .search-container
      .search
        i.icon search
        input#search-input(type="text" autocomplete="off" placeholder="Type a package name...")
        button.btn.clear
          i.icon clear

      .search-results-container
    .flex.w-full.gap-2
      .info-pane
        .flex-grow#bundle-time Bundled in ...
        .flex-grow
          .action-btns-overflow
            .action-btns
              .flex-grow
              button.btn#run(type='button') Run
              button.btn.btn-share#share(type='button') Share
              .file-size Wait
      
  .container(class="!max-w-screen-lg relative")
    .flex-wrapper
      mixin editor-btns
        .editor-btns&attributes(attributes)
          .flex-1
          button.clear-btn(type="button" title="Clear code editor")
            svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
              path(d='M12 1.75a3.25 3.25 0 0 1 3.245 3.066L15.25 5h5.25a.75.75 0 0 1 .102 1.493L20.5 6.5h-.796l-1.28 13.02a2.75 2.75 0 0 1-2.561 2.474l-.176.006H8.313a2.75 2.75 0 0 1-2.714-2.307l-.023-.174L4.295 6.5H3.5a.75.75 0 0 1-.743-.648L2.75 5.75a.75.75 0 0 1 .648-.743L3.5 5h5.25A3.25 3.25 0 0 1 12 1.75Zm6.197 4.75H5.802l1.267 12.872a1.25 1.25 0 0 0 1.117 1.122l.127.006h7.374c.6 0 1.109-.425 1.225-1.002l.02-.126L18.196 6.5ZM13.75 9.25a.75.75 0 0 1 .743.648L14.5 10v7a.75.75 0 0 1-1.493.102L13 17v-7a.75.75 0 0 1 .75-.75Zm-3.5 0a.75.75 0 0 1 .743.648L11 10v7a.75.75 0 0 1-1.493.102L9.5 17v-7a.75.75 0 0 1 .75-.75Zm1.75-6a1.75 1.75 0 0 0-1.744 1.606L10.25 5h3.5A1.75 1.75 0 0 0 12 3.25Z')
          button.prettier-btn(type="button" title="Format code using Prettier")
            svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
              path(d='M5.75 2a.75.75 0 0 0-.75.75v11.5a2.25 2.25 0 0 0 2.25 2.25H9.5v3a2.5 2.5 0 1 0 5 0v-3h2.25A2.25 2.25 0 0 0 19 14.25V2.75a.75.75 0 0 0-.75-.75H5.75Zm.75 9V3.5h6v1.752a.75.75 0 1 0 1.5 0V3.5h1v2.751a.75.75 0 1 0 1.5 0V3.5h1V11h-11Zm0 3.25V12.5h11v1.75a.75.75 0 0 1-.75.75h-3a.75.75 0 0 0-.75.75v3.75a1 1 0 0 1-2 0v-3.75a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 1-.75-.75Z')
          button.reset-btn(type="button" title="Reset code")
            svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
              path(d='M12 4.5a7.5 7.5 0 1 1-7.419 6.392c.067-.454-.265-.892-.724-.892a.749.749 0 0 0-.752.623A9 9 0 1 0 6 5.292V4.25a.75.75 0 0 0-1.5 0v3c0 .414.336.75.75.75h3a.75.75 0 0 0 0-1.5H6.9a7.473 7.473 0 0 1 5.1-2Z')
          .copy-container
            button.editor-info(tabindex="-1" aria-hidden="true") Copied!
            button.copy-btn(type="button" title="Copy code")
              svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                path(d='M5.503 4.627 5.5 6.75v10.504a3.25 3.25 0 0 0 3.25 3.25h8.616a2.251 2.251 0 0 1-2.122 1.5H8.75A4.75 4.75 0 0 1 4 17.254V6.75c0-.98.627-1.815 1.503-2.123ZM17.75 2A2.25 2.25 0 0 1 20 4.25v13a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-13A2.25 2.25 0 0 1 8.75 2h9Zm0 1.5h-9a.75.75 0 0 0-.75.75v13c0 .414.336.75.75.75h9a.75.75 0 0 0 .75-.75v-13a.75.75 0 0 0-.75-.75Z')
          button.code-wrap-btn(type="button" title="Toggle code wrap")
            svg.icon(width='24' height='24' fill='none' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
              path(d='M2.75 5a.75.75 0 0 0 0 1.5h18.5a.75.75 0 0 0 0-1.5H2.75ZM2.75 11.5a.75.75 0 0 0 0 1.5H19a2.5 2.5 0 0 1 0 5h-4.44l.72-.72a.75.75 0 1 0-1.06-1.06l-2 2a.75.75 0 0 0 0 1.06l2 2a.75.75 0 1 0 1.06-1.06l-.72-.72H19a4 4 0 0 0 0-8H2.75Z')
              path(d='M2 18.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Z')

      .app#input
        .center-container
          .loading
        #editor
        +editor-btns
        
      .app#output
        .center-container
          .loading
        #editor 
        +editor-btns

  .container  
    h2#usage Usage
    blockquote When bundling packages that also export CSS and other external files, #[strong bundle.js.org] now checks the gzip size of these external files, even though it won't output any code. Keep this in mind this isn't a bug, however, if it causes confusion I am willing to change this behaviour.
    blockquote Treeshaking is available, but since esbuild and rollup don't have direct access to each packages package.json, there might be slight package version conflicts.
    blockquote Check the console for error messages and warnings.

    p You can use custom protocols to specify which CDN the module should come from.
    br
    p
      ul.list-disc
        li esm.run:react   ->   #[a(href="https://esm.run/react" target="_blank" rel="noopener") https://esm.run/react] 
        //- br
        li esm.sh:react    ->   #[a(href="https://cdn.esm.sh/react" target="_blank" rel="noopener") https://cdn.esm.sh/react] 
        //- br
        li esm:react       ->   #[a(href="https://cdn.esm.sh/react" target="_blank" rel="noopener") https://cdn.esm.sh/react] 
        //- br
        li skypack:react   ->   #[a(href="https://cdn.skypack.dev/react" target="_blank" rel="noopener") https://cdn.skypack.dev/react] 
        //- br
        li unpkg:react     ->   #[a(href="https://unpkg.com/react" target="_blank" rel="noopener") https://unpkg.com/react] 
        //- br
        li jsdelivr:react  ->   #[a(href="https://cdn.jsdelivr.net/npm/react" target="_blank" rel="noopener") https://cdn.jsdelivr.net/npm/react] 
    br
    p e.g.
    :markdown-it(linkify langPrefix='language-')
      ```ts
      import { toStr } from "skypack:@okikio/animate";
      // or
      export * from "esm:@okikio/animate"; 
      // or 
      export { animate } from "https://cdn.skypack.dev/@okikio/animate";
      ```
    br
    p.relative
      span="* If an error occurs try using a different CDN, by default "
      strong bundle
      |  uses
      a(href="https://cdn.skypack.dev" target="_blank" rel="noopener")  cdn.skypack.dev
      |  but you can use the others.
    br
    p.relative
      span="* For some packages an error occurs where the default export is excluded from the treeshaken bundle, the solution for this is to manually include the default export like so,  "
      :markdown-it(linkify langPrefix='language-')
        ```ts
        export * from "solid-dismiss";
        // and
        export { default } from "solid-dismiss";
        ```
    br
    br
    h4#url-queries URL Queries & Shareable Links
    br
    p
      | You can now use search queries in #[strong bundle], all you need to do is add this to the url #[br]
      | #[code="?q={packages}&treeshake={methods to treeshake}"] #[br] #[br] 
      | e.g. #[br]
      | You want #[code react], #[code react-dom], #[code vue], and #[code @okikio/animate], but only want the #[code Animate] and #[code toStr] methods exported from #[code @okikio/animate].
      | #[br] #[br] You would add this to the url 
      a(href="/?q=react,react-dom,vue,@okikio/animate&treeshake=[*],[*],[*],[{Animate,toStr}]" rel="noopener")
        | ?q=react,react-dom,vue,@okikio/animate&treeshake=[*],[*],[*],[{Animate,toStr}]
      br 
      br
      | If you only want a couple packages and don't care to treeshake, then all you need is something like this,
      a(href="/?q=react,react-dom,vue,@okikio/animate" rel="noopener")
        | ?q=react,react-dom,vue,@okikio/animate
      | . There is another way to share a reproduciable bundle, the sharable link. Shareble links look like this #[a(href="/?share=PTAEGEBsEsGMGtQCUCuA7UAzA9gJ1AC4AWApqAELoAmkJVoA1KALLRrSbR2OgDiAXtAAOQ7kICGCcQHMyAZ2j8SAKBIAPIXgKgAVFlzYAtqABEAAWzxoV7MHHtD4giRMBuIA" rel="noopener") /?share=PTAEGEBs...] with the string value of the input code editor being compressed into a string and placed into the URL. 
      br
      br
      | In order to create a shareble link, you click the #[code Share] button, it copies the share url to your clipboard, and from there you can paste where you wish. 
      br
      br
      details(class="bg-white border border-gray-300 dark:bg-elevated dark:border-gray-700").rounded-md
        summary
          p.px-4.py-2.cursor-pointer.select-none Auto-bundling shared URL's
        div.content.px-2
          p If you would like to bundle your code when the share URL is loaded, add #[code bundle] to the url, e.g. #[a(href="/?q=@okikio/animate&bundle" rel="noopener") /?bundle&q=@okikio/animate] or #[a(href="/?bundle&share=PTAEGEBsEsGMGtQCUCuA7UAzA9gJ1AC4AWApqAELoAmkJVoA1KALLRrSbR2OgDiAXtAAOQ7kICGCcQHMyAZ2j8SAKBIAPIXgKgAVFlzYAtqABEAAWzxoV7MHHtD4giRMBuIA" rel="noopener") /?bundle&share=PTAEGEBs...]
    br
    br
    h4#badges Badges
    p
      | You can also add bundle badges, they look like this,
      br
      br
      div.space-x-2
        a(href="https://bundle.js.org/" class="inline-block") 
          img(src="/badge-light.svg", alt="Open Bundle" loading="lazy" width="150" height="40")
        a(href="https://bundle.js.org/" class="inline-block") 
          img(src="/badge-dark.svg", alt="Open Bundle" loading="lazy" width="150" height="40")
      br
      | All you need to do is to add this to your #[code README.md]
      br
      :markdown-it(linkify langPrefix='language-')
        ```md
        # Light Mode Badge 
        [![Open Bundle](https://bundle.js.org/badge-light.svg)](https://bundle.js.org/)

        # Dark Mode Badge 
        [![Open Bundle](https://bundle.js.org/badge-dark.svg)](https://bundle.js.org/)
        ```
      br
      | You can use the #[a(href="#url-queries--shareable-links") URL Queries & Shareable Links] above, to create unique bundles, when users clicks on the badge.
    br
    br
    br
    .text-center
      p(class="bg-white border border-gray-300 dark:bg-elevated dark:border-gray-700").inline-block.px-4.py-2.rounded-md
        span#visit-counter.inline-block 👋 00000 visits
    br
    +product-hunt.place-content-center

block script 
  //- script(src='/js/index.min.js' type='module' async)

  