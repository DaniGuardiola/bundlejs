extends /layouts/layout.pug

block content
  #faq.container.max-w-screen-lg
    h2 Frequently Asked Questions
    p I often get asked what was the point in building bundle, this is a short, quick, and simple summary of my reasons for building bundle.   
    br
    br
    h4 
      | What is the advantage over 
      a(href="https://bundlephobia.com" target="_blank" rel="noopener")  bundlephobia
      | ?
    p There are a couple reasons for this but the main one is that bundlephobia wasn't reliable enough. 
    br
    h4 
      | What do you mean wasn't reliable enough? 
    p It can treeshake bundles accurately. Right now bundlephobia, is a bit hit or miss when it comes to treeshaking.
      br
      br
      :markdown-it(linkify langPrefix='language-')
        For example, try treeshaking the `Event` class from `@okikio/emitter` using [bundlephobia](https://bundlephobia.com/package/@okikio/emitter) [![npm bundle size](https://img.shields.io/bundlephobia/minzip/@okikio/emitter?style=flat-square)](https://bundlephobia.com/package/@okikio/emitter) and try pasting this, 
        ```ts
        export { Event } from "@okikio/emitter";
        ``` 
      br
      :markdown-it(linkify langPrefix='language-')
        into [bundle.js.org](https://bundle.js.org). You will notice a major package size disparity. This is only one example and I am sure others exist, I hope the above example illustrates my point. 
      br
      :markdown-it(linkify langPrefix='language-')
        Another problem with `bundlephobia` is the lack of good error reporting if for (whatever reason) `bundlephobia` isn't able to bundle your package, it logs this to the console,
        ```ts 
        {
            "code": "BuildError",
            "message": "Failed to build this package.",
            "details": {
                "name": "BuildError"
            }
        }
        ```

        this just isn't very useful for debugging. `bundle.js.org` run locally  

